package android.support.v7.widget;

import a.a.c.g.e;
import a.a.c.g.e.a;
import android.content.Context;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.graphics.drawable.Drawable;
import android.support.v7.view.menu.ActionMenuItemView;
import android.support.v7.view.menu.ActionMenuItemView.b;
import android.support.v7.view.menu.D;
import android.support.v7.view.menu.b;
import android.support.v7.view.menu.l;
import android.support.v7.view.menu.p;
import android.support.v7.view.menu.u;
import android.support.v7.view.menu.v.a;
import android.support.v7.view.menu.w;
import android.support.v7.view.menu.w.a;
import android.support.v7.view.menu.z;
import android.util.DisplayMetrics;
import android.util.SparseBooleanArray;
import android.view.MenuItem;
import android.view.View;
import android.view.View.MeasureSpec;
import android.view.ViewGroup;
import android.widget.ImageView;
import java.util.ArrayList;

class g
  extends b
  implements e.a
{
  a A;
  c B;
  private b C;
  final f D = new f();
  int E;
  d k;
  private Drawable l;
  private boolean m;
  private boolean n;
  private boolean o;
  private int p;
  private int q;
  private int r;
  private boolean s;
  private boolean t;
  private boolean u;
  private boolean v;
  private int w;
  private final SparseBooleanArray x = new SparseBooleanArray();
  private View y;
  e z;
  
  public g(Context paramContext)
  {
    super(paramContext, a.a.d.a.g.abc_action_menu_layout, a.a.d.a.g.abc_action_menu_item_layout);
  }
  
  private View a(MenuItem paramMenuItem)
  {
    ViewGroup localViewGroup = (ViewGroup)this.i;
    if (localViewGroup == null) {
      return null;
    }
    int j = localViewGroup.getChildCount();
    int i = 0;
    while (i < j)
    {
      View localView = localViewGroup.getChildAt(i);
      if (((localView instanceof w.a)) && (((w.a)localView).getItemData() == paramMenuItem)) {
        return localView;
      }
      i += 1;
    }
    return null;
  }
  
  public View a(p paramP, View paramView, ViewGroup paramViewGroup)
  {
    View localView = paramP.getActionView();
    if ((localView == null) || (paramP.f())) {
      localView = super.a(paramP, paramView, paramViewGroup);
    }
    int i;
    if (paramP.isActionViewExpanded()) {
      i = 8;
    } else {
      i = 0;
    }
    localView.setVisibility(i);
    paramP = (ActionMenuView)paramViewGroup;
    paramView = localView.getLayoutParams();
    if (!paramP.checkLayoutParams(paramView)) {
      localView.setLayoutParams(paramP.generateLayoutParams(paramView));
    }
    return localView;
  }
  
  public void a(Context paramContext, l paramL)
  {
    super.a(paramContext, paramL);
    paramL = paramContext.getResources();
    paramContext = a.a.d.d.a.a(paramContext);
    if (!o) {
      n = paramContext.g();
    }
    if (!u) {
      p = paramContext.b();
    }
    if (!s) {
      r = paramContext.c();
    }
    int i = p;
    if (n)
    {
      if (k == null)
      {
        k = new d(a);
        if (m)
        {
          k.setImageDrawable(l);
          l = null;
          m = false;
        }
        int j = View.MeasureSpec.makeMeasureSpec(0, 0);
        k.measure(j, j);
      }
      i -= k.getMeasuredWidth();
    }
    else
    {
      k = null;
    }
    q = i;
    w = ((int)(getDisplayMetricsdensity * 56.0F));
    y = null;
  }
  
  public void a(Configuration paramConfiguration)
  {
    if (!s) {
      r = a.a.d.d.a.a(b).c();
    }
    paramConfiguration = c;
    if (paramConfiguration != null) {
      paramConfiguration.b(true);
    }
  }
  
  public void a(Drawable paramDrawable)
  {
    d localD = k;
    if (localD != null)
    {
      localD.setImageDrawable(paramDrawable);
      return;
    }
    m = true;
    l = paramDrawable;
  }
  
  public void a(l paramL, boolean paramBoolean)
  {
    c();
    super.a(paramL, paramBoolean);
  }
  
  public void a(p paramP, w.a paramA)
  {
    paramA.a(paramP, 0);
    paramP = (ActionMenuView)i;
    paramA = (ActionMenuItemView)paramA;
    paramA.setItemInvoker(paramP);
    if (C == null) {
      C = new b();
    }
    paramA.setPopupCallback(C);
  }
  
  public void a(ActionMenuView paramActionMenuView)
  {
    i = paramActionMenuView;
    paramActionMenuView.a(c);
  }
  
  public void a(boolean paramBoolean)
  {
    super.a(paramBoolean);
    ((View)this.i).requestLayout();
    Object localObject1 = c;
    int j = 0;
    int i1;
    Object localObject2;
    if (localObject1 != null)
    {
      localObject1 = ((l)localObject1).c();
      i1 = ((ArrayList)localObject1).size();
      i = 0;
      while (i < i1)
      {
        localObject2 = ((p)((ArrayList)localObject1).get(i)).a();
        if (localObject2 != null) {
          ((e)localObject2).a(this);
        }
        i += 1;
      }
    }
    localObject1 = c;
    if (localObject1 != null) {
      localObject1 = ((l)localObject1).j();
    } else {
      localObject1 = null;
    }
    int i = j;
    boolean bool;
    if (n)
    {
      i = j;
      if (localObject1 != null)
      {
        i1 = ((ArrayList)localObject1).size();
        if (i1 == 1)
        {
          bool = ((p)((ArrayList)localObject1).get(0)).isActionViewExpanded() ^ true;
        }
        else
        {
          bool = j;
          if (i1 > 0) {
            bool = true;
          }
        }
      }
    }
    if (bool)
    {
      if (k == null) {
        k = new d(a);
      }
      localObject1 = (ViewGroup)k.getParent();
      if (localObject1 != this.i)
      {
        if (localObject1 != null) {
          ((ViewGroup)localObject1).removeView(k);
        }
        localObject1 = (ActionMenuView)this.i;
        ((ViewGroup)localObject1).addView(k, ((ActionMenuView)localObject1).b());
      }
    }
    else
    {
      localObject1 = k;
      if (localObject1 != null)
      {
        localObject1 = ((ImageView)localObject1).getParent();
        localObject2 = this.i;
        if (localObject1 == localObject2) {
          ((ViewGroup)localObject2).removeView(k);
        }
      }
    }
    ((ActionMenuView)this.i).setOverflowReserved(n);
  }
  
  public boolean a()
  {
    Object localObject2 = this;
    Object localObject1 = c;
    int i2;
    if (localObject1 != null)
    {
      localObject1 = ((l)localObject1).n();
      i2 = ((ArrayList)localObject1).size();
    }
    else
    {
      localObject1 = null;
      i2 = 0;
    }
    int i = r;
    int i6 = q;
    int i8 = View.MeasureSpec.makeMeasureSpec(0, 0);
    ViewGroup localViewGroup = (ViewGroup)i;
    int i3 = 0;
    int i4 = 0;
    int j = 0;
    int i1 = 0;
    while (i3 < i2)
    {
      localObject3 = (p)((ArrayList)localObject1).get(i3);
      if (((p)localObject3).k()) {
        j += 1;
      } else if (((p)localObject3).j()) {
        i1 += 1;
      } else {
        i4 = 1;
      }
      i5 = i;
      if (v)
      {
        i5 = i;
        if (((p)localObject3).isActionViewExpanded()) {
          i5 = 0;
        }
      }
      i3 += 1;
      i = i5;
    }
    i3 = i;
    if (n) {
      if (i4 == 0)
      {
        i3 = i;
        if (i1 + j <= i) {}
      }
      else
      {
        i3 = i - 1;
      }
    }
    i = i3 - j;
    Object localObject3 = x;
    ((SparseBooleanArray)localObject3).clear();
    if (t)
    {
      j = w;
      i1 = i6 / j;
      i4 = j + i6 % j / i1;
    }
    else
    {
      i4 = 0;
      i1 = 0;
    }
    i3 = i6;
    i6 = 0;
    j = 0;
    int i5 = i2;
    for (;;)
    {
      localObject2 = this;
      if (i6 >= i5) {
        break;
      }
      p localP = (p)((ArrayList)localObject1).get(i6);
      View localView;
      if (localP.k())
      {
        localView = ((g)localObject2).a(localP, y, localViewGroup);
        if (y == null) {
          y = localView;
        }
        if (t) {
          i1 -= ActionMenuView.a(localView, i4, i1, i8, 0);
        } else {
          localView.measure(i8, i8);
        }
        i2 = localView.getMeasuredWidth();
        i3 -= i2;
        if (j == 0) {
          j = i2;
        }
        i2 = localP.getGroupId();
        if (i2 != 0) {
          ((SparseBooleanArray)localObject3).put(i2, true);
        }
        localP.d(true);
      }
      for (;;)
      {
        break;
        if (localP.j())
        {
          int i9 = localP.getGroupId();
          boolean bool = ((SparseBooleanArray)localObject3).get(i9);
          int i10;
          if (((i > 0) || (bool)) && (i3 > 0) && ((!t) || (i1 > 0))) {
            i10 = 1;
          } else {
            i10 = 0;
          }
          int i7;
          if (i10 != 0)
          {
            localView = ((g)localObject2).a(localP, y, localViewGroup);
            if (y == null) {
              y = localView;
            }
            if (t)
            {
              i7 = ActionMenuView.a(localView, i4, i1, i8, 0);
              i2 = i1 - i7;
              i1 = i2;
              if (i7 == 0)
              {
                i10 = 0;
                i1 = i2;
              }
            }
            else
            {
              localView.measure(i8, i8);
            }
            i7 = localView.getMeasuredWidth();
            i3 -= i7;
            i2 = j;
            if (j == 0) {
              i2 = i7;
            }
            if (t ? i3 >= 0 : i3 + i2 > 0) {
              j = 1;
            } else {
              j = 0;
            }
            i10 &= j;
            j = i2;
          }
          if ((i10 != 0) && (i9 != 0))
          {
            ((SparseBooleanArray)localObject3).put(i9, true);
            i2 = i;
          }
          else
          {
            i2 = i;
            if (bool)
            {
              ((SparseBooleanArray)localObject3).put(i9, false);
              i7 = 0;
              for (;;)
              {
                i2 = i;
                if (i7 >= i6) {
                  break;
                }
                localObject2 = (p)((ArrayList)localObject1).get(i7);
                i2 = i;
                if (((p)localObject2).getGroupId() == i9)
                {
                  i2 = i;
                  if (((p)localObject2).h()) {
                    i2 = i + 1;
                  }
                  ((p)localObject2).d(false);
                }
                i7 += 1;
                i = i2;
              }
            }
          }
          i = i2;
          if (i10 != 0) {
            i = i2 - 1;
          }
          localP.d(i10);
        }
        else
        {
          localP.d(false);
        }
      }
      i6 += 1;
    }
    return true;
  }
  
  public boolean a(int paramInt, p paramP)
  {
    return paramP.h();
  }
  
  public boolean a(D paramD)
  {
    boolean bool1 = paramD.hasVisibleItems();
    boolean bool2 = false;
    if (!bool1) {
      return false;
    }
    for (Object localObject = paramD; ((D)localObject).t() != c; localObject = (D)((D)localObject).t()) {}
    localObject = a(((D)localObject).getItem());
    if (localObject == null) {
      return false;
    }
    E = paramD.getItem().getItemId();
    int j = paramD.size();
    int i = 0;
    for (;;)
    {
      bool1 = bool2;
      if (i >= j) {
        break;
      }
      MenuItem localMenuItem = paramD.getItem(i);
      if ((localMenuItem.isVisible()) && (localMenuItem.getIcon() != null))
      {
        bool1 = true;
        break;
      }
      i += 1;
    }
    A = new a(b, paramD, (View)localObject);
    A.a(bool1);
    A.e();
    super.a(paramD);
    return true;
  }
  
  public boolean a(ViewGroup paramViewGroup, int paramInt)
  {
    if (paramViewGroup.getChildAt(paramInt) == k) {
      return false;
    }
    return super.a(paramViewGroup, paramInt);
  }
  
  public w b(ViewGroup paramViewGroup)
  {
    w localW = i;
    paramViewGroup = super.b(paramViewGroup);
    if (localW != paramViewGroup) {
      ((ActionMenuView)paramViewGroup).setPresenter(this);
    }
    return paramViewGroup;
  }
  
  public void b(boolean paramBoolean)
  {
    v = paramBoolean;
  }
  
  public void c(boolean paramBoolean)
  {
    n = paramBoolean;
    o = true;
  }
  
  public boolean c()
  {
    return e() | f();
  }
  
  public Drawable d()
  {
    d localD = k;
    if (localD != null) {
      return localD.getDrawable();
    }
    if (m) {
      return l;
    }
    return null;
  }
  
  public boolean e()
  {
    Object localObject = B;
    if (localObject != null)
    {
      w localW = i;
      if (localW != null)
      {
        ((View)localW).removeCallbacks((Runnable)localObject);
        B = null;
        return true;
      }
    }
    localObject = z;
    if (localObject != null)
    {
      ((u)localObject).a();
      return true;
    }
    return false;
  }
  
  public boolean f()
  {
    a localA = A;
    if (localA != null)
    {
      localA.a();
      return true;
    }
    return false;
  }
  
  public boolean g()
  {
    return (B != null) || (h());
  }
  
  public boolean h()
  {
    e localE = z;
    return (localE != null) && (localE.c());
  }
  
  public boolean i()
  {
    if ((n) && (!h()))
    {
      l localL = c;
      if ((localL != null) && (i != null) && (B == null) && (!localL.j().isEmpty()))
      {
        B = new c(new e(b, c, k, true));
        ((View)i).post(B);
        super.a(null);
        return true;
      }
    }
    return false;
  }
  
  private class a
    extends u
  {
    public a(Context paramContext, D paramD, View paramView)
    {
      super(paramD, paramView, false, a.a.d.a.a.actionOverflowMenuStyle);
      if (!((p)paramD.getItem()).h())
      {
        paramD = k;
        paramContext = paramD;
        if (paramD == null) {
          paramContext = (View)g.c(g.this);
        }
        a(paramContext);
      }
      a(D);
    }
    
    protected void d()
    {
      g localG = g.this;
      A = null;
      E = 0;
      super.d();
    }
  }
  
  private class b
    extends ActionMenuItemView.b
  {
    b() {}
    
    public z a()
    {
      g.a localA = A;
      if (localA != null) {
        return localA.b();
      }
      return null;
    }
  }
  
  private class c
    implements Runnable
  {
    private g.e a;
    
    public c(g.e paramE)
    {
      a = paramE;
    }
    
    public void run()
    {
      if (g.d(g.this) != null) {
        g.e(g.this).a();
      }
      View localView = (View)g.f(g.this);
      if ((localView != null) && (localView.getWindowToken() != null) && (a.f())) {
        z = a;
      }
      B = null;
    }
  }
  
  private class d
    extends t
    implements ActionMenuView.a
  {
    private final float[] c = new float[2];
    
    public d(Context paramContext)
    {
      super(null, a.a.d.a.a.actionOverflowButtonStyle);
      setClickable(true);
      setFocusable(true);
      setVisibility(0);
      setEnabled(true);
      Ba.a(this, getContentDescription());
      setOnTouchListener(new h(this, this, g.this));
    }
    
    public boolean a()
    {
      return false;
    }
    
    public boolean b()
    {
      return false;
    }
    
    public boolean performClick()
    {
      if (super.performClick()) {
        return true;
      }
      playSoundEffect(0);
      i();
      return true;
    }
    
    protected boolean setFrame(int paramInt1, int paramInt2, int paramInt3, int paramInt4)
    {
      boolean bool = super.setFrame(paramInt1, paramInt2, paramInt3, paramInt4);
      Drawable localDrawable1 = getDrawable();
      Drawable localDrawable2 = getBackground();
      if ((localDrawable1 != null) && (localDrawable2 != null))
      {
        int i = getWidth();
        paramInt2 = getHeight();
        paramInt1 = Math.max(i, paramInt2) / 2;
        int j = getPaddingLeft();
        int k = getPaddingRight();
        paramInt3 = getPaddingTop();
        paramInt4 = getPaddingBottom();
        i = (i + (j - k)) / 2;
        paramInt2 = (paramInt2 + (paramInt3 - paramInt4)) / 2;
        android.support.v4.graphics.drawable.a.a(localDrawable2, i - paramInt1, paramInt2 - paramInt1, i + paramInt1, paramInt2 + paramInt1);
      }
      return bool;
    }
  }
  
  private class e
    extends u
  {
    public e(Context paramContext, l paramL, View paramView, boolean paramBoolean)
    {
      super(paramL, paramView, paramBoolean, a.a.d.a.a.actionOverflowMenuStyle);
      a(8388613);
      a(D);
    }
    
    protected void d()
    {
      if (g.a(g.this) != null) {
        g.b(g.this).close();
      }
      z = null;
      super.d();
    }
  }
  
  private class f
    implements v.a
  {
    f() {}
    
    public void a(l paramL, boolean paramBoolean)
    {
      if ((paramL instanceof D)) {
        paramL.m().a(false);
      }
      v.a localA = b();
      if (localA != null) {
        localA.a(paramL, paramBoolean);
      }
    }
    
    public boolean a(l paramL)
    {
      boolean bool = false;
      if (paramL == null) {
        return false;
      }
      E = ((D)paramL).getItem().getItemId();
      v.a localA = b();
      if (localA != null) {
        bool = localA.a(paramL);
      }
      return bool;
    }
  }
}
