package android.support.v7.widget;

import a.a.c.g.u;
import a.a.c.g.v;
import android.content.Context;
import android.text.TextUtils;
import android.util.Log;
import android.view.MotionEvent;
import android.view.View;
import android.view.View.OnAttachStateChangeListener;
import android.view.View.OnHoverListener;
import android.view.View.OnLongClickListener;
import android.view.ViewConfiguration;
import android.view.accessibility.AccessibilityManager;

class Ea
  implements View.OnLongClickListener, View.OnHoverListener, View.OnAttachStateChangeListener
{
  private static Ea a;
  private static Ea b;
  private final View c;
  private final CharSequence d;
  private final int e;
  private final Runnable f = new Ca(this);
  private final Runnable g = new Da(this);
  private int h;
  private int i;
  private Fa j;
  private boolean k;
  
  private Ea(View paramView, CharSequence paramCharSequence)
  {
    c = paramView;
    d = paramCharSequence;
    e = v.a(ViewConfiguration.get(c.getContext()));
    c();
    c.setOnLongClickListener(this);
    c.setOnHoverListener(this);
  }
  
  private static void a(Ea paramEa)
  {
    Ea localEa = a;
    if (localEa != null) {
      localEa.b();
    }
    a = paramEa;
    paramEa = a;
    if (paramEa != null) {
      paramEa.d();
    }
  }
  
  public static void a(View paramView, CharSequence paramCharSequence)
  {
    Ea localEa = a;
    if ((localEa != null) && (c == paramView)) {
      a(null);
    }
    if (TextUtils.isEmpty(paramCharSequence))
    {
      paramCharSequence = b;
      if ((paramCharSequence != null) && (c == paramView)) {
        paramCharSequence.a();
      }
      paramView.setOnLongClickListener(null);
      paramView.setLongClickable(false);
      paramView.setOnHoverListener(null);
      return;
    }
    new Ea(paramView, paramCharSequence);
  }
  
  private boolean a(MotionEvent paramMotionEvent)
  {
    int m = (int)paramMotionEvent.getX();
    int n = (int)paramMotionEvent.getY();
    if ((Math.abs(m - h) <= e) && (Math.abs(n - i) <= e)) {
      return false;
    }
    h = m;
    i = n;
    return true;
  }
  
  private void b()
  {
    c.removeCallbacks(f);
  }
  
  private void c()
  {
    h = Integer.MAX_VALUE;
    i = Integer.MAX_VALUE;
  }
  
  private void d()
  {
    c.postDelayed(f, ViewConfiguration.getLongPressTimeout());
  }
  
  void a()
  {
    if (b == this)
    {
      b = null;
      Fa localFa = j;
      if (localFa != null)
      {
        localFa.a();
        j = null;
        c();
        c.removeOnAttachStateChangeListener(this);
      }
      else
      {
        Log.e("TooltipCompatHandler", "sActiveHandler.mPopup == null");
      }
    }
    if (a == this) {
      a(null);
    }
    c.removeCallbacks(g);
  }
  
  void a(boolean paramBoolean)
  {
    if (!u.h(c)) {
      return;
    }
    a(null);
    Ea localEa = b;
    if (localEa != null) {
      localEa.a();
    }
    b = this;
    k = paramBoolean;
    j = new Fa(c.getContext());
    j.a(c, h, i, k, d);
    c.addOnAttachStateChangeListener(this);
    long l;
    if (k)
    {
      l = 2500L;
    }
    else
    {
      if ((u.f(c) & 0x1) == 1) {
        l = 3000L;
      } else {
        l = 15000L;
      }
      l -= ViewConfiguration.getLongPressTimeout();
    }
    c.removeCallbacks(g);
    c.postDelayed(g, l);
  }
  
  public boolean onHover(View paramView, MotionEvent paramMotionEvent)
  {
    if ((j != null) && (k)) {
      return false;
    }
    paramView = (AccessibilityManager)c.getContext().getSystemService("accessibility");
    if ((paramView.isEnabled()) && (paramView.isTouchExplorationEnabled())) {
      return false;
    }
    int m = paramMotionEvent.getAction();
    if (m != 7)
    {
      if (m != 10) {
        return false;
      }
      c();
      a();
      return false;
    }
    if ((c.isEnabled()) && (j == null) && (a(paramMotionEvent))) {
      a(this);
    }
    return false;
  }
  
  public boolean onLongClick(View paramView)
  {
    h = (paramView.getWidth() / 2);
    i = (paramView.getHeight() / 2);
    a(true);
    return true;
  }
  
  public void onViewAttachedToWindow(View paramView) {}
  
  public void onViewDetachedFromWindow(View paramView)
  {
    a();
  }
}
