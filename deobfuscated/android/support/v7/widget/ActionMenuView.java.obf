package android.support.v7.widget;

import android.content.Context;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.graphics.drawable.Drawable;
import android.support.v7.view.menu.ActionMenuItemView;
import android.support.v7.view.menu.b;
import android.support.v7.view.menu.l;
import android.support.v7.view.menu.l.a;
import android.support.v7.view.menu.l.b;
import android.support.v7.view.menu.p;
import android.support.v7.view.menu.v.a;
import android.support.v7.view.menu.w;
import android.util.AttributeSet;
import android.util.DisplayMetrics;
import android.view.ContextThemeWrapper;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.MeasureSpec;
import android.view.ViewDebug.ExportedProperty;
import android.view.ViewGroup;
import android.view.ViewGroup.LayoutParams;
import android.view.ViewGroup.MarginLayoutParams;
import android.view.accessibility.AccessibilityEvent;

public class ActionMenuView
  extends Q
  implements l.b, w
{
  e A;
  private l p;
  private Context q;
  private int r;
  private boolean s;
  private g t;
  private v.a u;
  l.a v;
  private boolean w;
  private int x;
  private int y;
  private int z;
  
  public ActionMenuView(Context paramContext)
  {
    this(paramContext, null);
  }
  
  public ActionMenuView(Context paramContext, AttributeSet paramAttributeSet)
  {
    super(paramContext, paramAttributeSet);
    setBaselineAligned(false);
    float f = getResourcesgetDisplayMetricsdensity;
    y = ((int)(56.0F * f));
    z = ((int)(f * 4.0F));
    q = paramContext;
    r = 0;
  }
  
  static int a(View paramView, int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    c localC = (c)paramView.getLayoutParams();
    int j = View.MeasureSpec.makeMeasureSpec(View.MeasureSpec.getSize(paramInt3) - paramInt4, View.MeasureSpec.getMode(paramInt3));
    ActionMenuItemView localActionMenuItemView;
    if ((paramView instanceof ActionMenuItemView)) {
      localActionMenuItemView = (ActionMenuItemView)paramView;
    } else {
      localActionMenuItemView = null;
    }
    boolean bool = true;
    if ((localActionMenuItemView != null) && (localActionMenuItemView.d())) {
      paramInt3 = 1;
    } else {
      paramInt3 = 0;
    }
    paramInt4 = 2;
    if ((paramInt2 > 0) && ((paramInt3 == 0) || (paramInt2 >= 2)))
    {
      paramView.measure(View.MeasureSpec.makeMeasureSpec(paramInt2 * paramInt1, Integer.MIN_VALUE), j);
      int k = paramView.getMeasuredWidth();
      int i = k / paramInt1;
      paramInt2 = i;
      if (k % paramInt1 != 0) {
        paramInt2 = i + 1;
      }
      if ((paramInt3 != 0) && (paramInt2 < 2)) {
        paramInt2 = paramInt4;
      }
    }
    else
    {
      paramInt2 = 0;
    }
    if ((c) || (paramInt3 == 0)) {
      bool = false;
    }
    f = bool;
    d = paramInt2;
    paramView.measure(View.MeasureSpec.makeMeasureSpec(paramInt1 * paramInt2, 1073741824), j);
    return paramInt2;
  }
  
  private void e(int paramInt1, int paramInt2)
  {
    int i3 = View.MeasureSpec.getMode(paramInt2);
    paramInt1 = View.MeasureSpec.getSize(paramInt1);
    int i = View.MeasureSpec.getSize(paramInt2);
    int j = getPaddingLeft();
    int k = getPaddingRight();
    int i4 = getPaddingTop() + getPaddingBottom();
    int i11 = ViewGroup.getChildMeasureSpec(paramInt2, i4, -2);
    int i6 = paramInt1 - (j + k);
    paramInt2 = y;
    paramInt1 = i6 / paramInt2;
    if (paramInt1 == 0)
    {
      setMeasuredDimension(i6, 0);
      return;
    }
    int i12 = paramInt2 + i6 % paramInt2 / paramInt1;
    int i13 = getChildCount();
    int i2 = 0;
    paramInt2 = 0;
    j = 0;
    int i1 = 0;
    int n = 0;
    k = 0;
    long l1 = 0L;
    Object localObject;
    c localC;
    while (i2 < i13)
    {
      localObject = getChildAt(i2);
      if (((View)localObject).getVisibility() != 8)
      {
        boolean bool = localObject instanceof ActionMenuItemView;
        i1 += 1;
        if (bool)
        {
          m = z;
          ((View)localObject).setPadding(m, 0, m, 0);
        }
        localC = (c)((View)localObject).getLayoutParams();
        h = false;
        e = 0;
        d = 0;
        f = false;
        leftMargin = 0;
        rightMargin = 0;
        if ((bool) && (((ActionMenuItemView)localObject).d())) {
          bool = true;
        } else {
          bool = false;
        }
        g = bool;
        if (c) {
          m = 1;
        } else {
          m = paramInt1;
        }
        i5 = a((View)localObject, i12, m, i11, i4);
        n = Math.max(n, i5);
        m = k;
        if (f) {
          m = k + 1;
        }
        if (c) {
          j = 1;
        }
        paramInt1 -= i5;
        paramInt2 = Math.max(paramInt2, ((View)localObject).getMeasuredHeight());
        if (i5 == 1) {
          l1 |= 1 << i2;
        }
        k = m;
      }
      i2 += 1;
    }
    if ((j != 0) && (i1 == 2)) {
      i4 = 1;
    } else {
      i4 = 0;
    }
    int m = 0;
    int i5 = paramInt1;
    paramInt1 = m;
    i2 = i6;
    while ((k > 0) && (i5 > 0))
    {
      i6 = Integer.MAX_VALUE;
      int i7 = 0;
      int i8 = 0;
      long l2;
      for (long l3 = 0L; i7 < i13; l3 = l2)
      {
        localObject = (c)getChildAt(i7).getLayoutParams();
        int i9;
        if (!f)
        {
          i9 = i6;
          m = i8;
          l2 = l3;
        }
        else
        {
          int i10 = d;
          if (i10 < i6)
          {
            i9 = i10;
            l2 = 1L << i7;
            m = 1;
          }
          else
          {
            i9 = i6;
            m = i8;
            l2 = l3;
            if (i10 == i6)
            {
              l2 = l3 | 1L << i7;
              m = i8 + 1;
              i9 = i6;
            }
          }
        }
        i7 += 1;
        i6 = i9;
        i8 = m;
      }
      m = paramInt1;
      paramInt1 = paramInt2;
      l1 |= l3;
      if (i8 > i5)
      {
        paramInt2 = paramInt1;
        paramInt1 = m;
        break;
      }
      paramInt2 = i6 + 1;
      m = 0;
      while (m < i13)
      {
        localObject = getChildAt(m);
        localC = (c)((View)localObject).getLayoutParams();
        long l4 = 1 << m;
        if ((l3 & l4) == 0L)
        {
          l2 = l1;
          if (d == paramInt2) {
            l2 = l1 | l4;
          }
          l1 = l2;
        }
        else
        {
          if ((i4 != 0) && (g) && (i5 == 1))
          {
            i6 = z;
            ((View)localObject).setPadding(i6 + i12, 0, i6, 0);
          }
          d += 1;
          h = true;
          i5 -= 1;
        }
        m += 1;
      }
      paramInt2 = paramInt1;
      paramInt1 = 1;
    }
    if ((j == 0) && (i1 == 1)) {
      j = 1;
    } else {
      j = 0;
    }
    if ((i5 > 0) && (l1 != 0L) && ((i5 < i1 - 1) || (j != 0) || (n > 1)))
    {
      float f2 = Long.bitCount(l1);
      if (j == 0)
      {
        float f1;
        if ((l1 & 1L) != 0L)
        {
          f1 = f2;
          if (!getChildAt0getLayoutParamsg) {
            f1 = f2 - 0.5F;
          }
        }
        else
        {
          f1 = f2;
        }
        j = i13 - 1;
        f2 = f1;
        if ((l1 & 1 << j) != 0L)
        {
          f2 = f1;
          if (!getChildAtgetLayoutParamsg) {
            f2 = f1 - 0.5F;
          }
        }
      }
      if (f2 > 0.0F) {
        j = (int)(i5 * i12 / f2);
      } else {
        j = 0;
      }
      k = 0;
      for (;;)
      {
        m = paramInt1;
        if (k >= i13) {
          break;
        }
        if ((l1 & 1 << k) == 0L)
        {
          m = paramInt1;
        }
        else
        {
          localObject = getChildAt(k);
          localC = (c)((View)localObject).getLayoutParams();
          if ((localObject instanceof ActionMenuItemView))
          {
            e = j;
            h = true;
            if ((k == 0) && (!g)) {
              leftMargin = (-j / 2);
            }
          }
          else
          {
            if (!c) {
              break label1073;
            }
            e = j;
            h = true;
            rightMargin = (-j / 2);
          }
          m = 1;
          break label1111;
          label1073:
          if (k != 0) {
            leftMargin = (j / 2);
          }
          m = paramInt1;
          if (k != i13 - 1)
          {
            rightMargin = (j / 2);
            m = paramInt1;
          }
        }
        label1111:
        k += 1;
        paramInt1 = m;
      }
    }
    m = paramInt1;
    paramInt1 = 0;
    if (m != 0) {
      while (paramInt1 < i13)
      {
        localObject = getChildAt(paramInt1);
        localC = (c)((View)localObject).getLayoutParams();
        if (h) {
          ((View)localObject).measure(View.MeasureSpec.makeMeasureSpec(d * i12 + e, 1073741824), i11);
        }
        paramInt1 += 1;
      }
    }
    if (i3 == 1073741824) {
      paramInt2 = i;
    }
    setMeasuredDimension(i2, paramInt2);
  }
  
  public void a()
  {
    g localG = t;
    if (localG != null) {
      localG.c();
    }
  }
  
  public void a(l paramL)
  {
    p = paramL;
  }
  
  public void a(v.a paramA, l.a paramA1)
  {
    u = paramA;
    v = paramA1;
  }
  
  public boolean a(p paramP)
  {
    return p.a(paramP, 0);
  }
  
  public c b()
  {
    c localC = generateDefaultLayoutParams();
    c = true;
    return localC;
  }
  
  public boolean c()
  {
    g localG = t;
    return (localG != null) && (localG.e());
  }
  
  protected boolean checkLayoutParams(ViewGroup.LayoutParams paramLayoutParams)
  {
    return (paramLayoutParams != null) && ((paramLayoutParams instanceof c));
  }
  
  public boolean d()
  {
    g localG = t;
    return (localG != null) && (localG.g());
  }
  
  protected boolean d(int paramInt)
  {
    boolean bool2 = false;
    if (paramInt == 0) {
      return false;
    }
    View localView1 = getChildAt(paramInt - 1);
    View localView2 = getChildAt(paramInt);
    boolean bool1 = bool2;
    if (paramInt < getChildCount())
    {
      bool1 = bool2;
      if ((localView1 instanceof a)) {
        bool1 = false | ((a)localView1).a();
      }
    }
    bool2 = bool1;
    if (paramInt > 0)
    {
      bool2 = bool1;
      if ((localView2 instanceof a)) {
        bool2 = bool1 | ((a)localView2).b();
      }
    }
    return bool2;
  }
  
  public boolean dispatchPopulateAccessibilityEvent(AccessibilityEvent paramAccessibilityEvent)
  {
    return false;
  }
  
  public boolean e()
  {
    g localG = t;
    return (localG != null) && (localG.h());
  }
  
  public boolean f()
  {
    return s;
  }
  
  public l g()
  {
    return p;
  }
  
  protected c generateDefaultLayoutParams()
  {
    c localC = new c(-2, -2);
    b = 16;
    return localC;
  }
  
  public c generateLayoutParams(AttributeSet paramAttributeSet)
  {
    return new c(getContext(), paramAttributeSet);
  }
  
  protected c generateLayoutParams(ViewGroup.LayoutParams paramLayoutParams)
  {
    if (paramLayoutParams != null)
    {
      if ((paramLayoutParams instanceof c)) {
        paramLayoutParams = new c((c)paramLayoutParams);
      } else {
        paramLayoutParams = new c(paramLayoutParams);
      }
      if (b <= 0) {
        b = 16;
      }
      return paramLayoutParams;
    }
    return generateDefaultLayoutParams();
  }
  
  public Menu getMenu()
  {
    if (p == null)
    {
      Object localObject = getContext();
      p = new l((Context)localObject);
      p.a(new d());
      t = new g((Context)localObject);
      t.c(true);
      g localG = t;
      localObject = u;
      if (localObject == null) {
        localObject = new b();
      }
      localG.a((v.a)localObject);
      p.a(t, q);
      t.a(this);
    }
    return p;
  }
  
  public Drawable getOverflowIcon()
  {
    getMenu();
    return t.d();
  }
  
  public int getPopupTheme()
  {
    return r;
  }
  
  public int getWindowAnimations()
  {
    return 0;
  }
  
  public boolean h()
  {
    g localG = t;
    return (localG != null) && (localG.i());
  }
  
  public void onConfigurationChanged(Configuration paramConfiguration)
  {
    super.onConfigurationChanged(paramConfiguration);
    paramConfiguration = t;
    if (paramConfiguration != null)
    {
      paramConfiguration.a(false);
      if (t.h())
      {
        t.e();
        t.i();
      }
    }
  }
  
  public void onDetachedFromWindow()
  {
    super.onDetachedFromWindow();
    a();
  }
  
  protected void onLayout(boolean paramBoolean, int paramInt1, int paramInt2, int paramInt3, int paramInt4)
  {
    if (!w)
    {
      super.onLayout(paramBoolean, paramInt1, paramInt2, paramInt3, paramInt4);
      return;
    }
    int m = getChildCount();
    int k = (paramInt4 - paramInt2) / 2;
    int n = getDividerWidth();
    int i1 = paramInt3 - paramInt1;
    paramInt1 = getPaddingRight();
    paramInt2 = getPaddingLeft();
    paramBoolean = Ha.a(this);
    paramInt1 = i1 - paramInt1 - paramInt2;
    paramInt2 = 0;
    paramInt4 = 0;
    paramInt3 = 0;
    View localView;
    c localC;
    int j;
    while (paramInt2 < m)
    {
      localView = getChildAt(paramInt2);
      if (localView.getVisibility() != 8)
      {
        localC = (c)localView.getLayoutParams();
        if (c)
        {
          i = localView.getMeasuredWidth();
          paramInt4 = i;
          if (d(paramInt2)) {
            paramInt4 = i + n;
          }
          int i2 = localView.getMeasuredHeight();
          if (paramBoolean)
          {
            j = getPaddingLeft() + leftMargin;
            i = j + paramInt4;
          }
          else
          {
            i = getWidth() - getPaddingRight() - rightMargin;
            j = i - paramInt4;
          }
          int i3 = k - i2 / 2;
          localView.layout(j, i3, i, i2 + i3);
          paramInt1 -= paramInt4;
          paramInt4 = 1;
        }
        else
        {
          paramInt1 -= localView.getMeasuredWidth() + leftMargin + rightMargin;
          d(paramInt2);
          paramInt3 += 1;
        }
      }
      paramInt2 += 1;
    }
    if ((m == 1) && (paramInt4 == 0))
    {
      localView = getChildAt(0);
      paramInt1 = localView.getMeasuredWidth();
      paramInt2 = localView.getMeasuredHeight();
      paramInt3 = i1 / 2 - paramInt1 / 2;
      paramInt4 = k - paramInt2 / 2;
      localView.layout(paramInt3, paramInt4, paramInt1 + paramInt3, paramInt2 + paramInt4);
      return;
    }
    paramInt2 = paramInt3 - (paramInt4 ^ 0x1);
    if (paramInt2 > 0) {
      paramInt1 /= paramInt2;
    } else {
      paramInt1 = 0;
    }
    paramInt4 = 0;
    paramInt3 = 0;
    int i = Math.max(0, paramInt1);
    if (paramBoolean)
    {
      paramInt2 = getWidth() - getPaddingRight();
      paramInt1 = paramInt3;
      while (paramInt1 < m)
      {
        localView = getChildAt(paramInt1);
        localC = (c)localView.getLayoutParams();
        paramInt3 = paramInt2;
        if (localView.getVisibility() != 8) {
          if (c)
          {
            paramInt3 = paramInt2;
          }
          else
          {
            paramInt2 -= rightMargin;
            paramInt3 = localView.getMeasuredWidth();
            paramInt4 = localView.getMeasuredHeight();
            j = k - paramInt4 / 2;
            localView.layout(paramInt2 - paramInt3, j, paramInt2, paramInt4 + j);
            paramInt3 = paramInt2 - (paramInt3 + leftMargin + i);
          }
        }
        paramInt1 += 1;
        paramInt2 = paramInt3;
      }
    }
    paramInt2 = getPaddingLeft();
    paramInt1 = paramInt4;
    while (paramInt1 < m)
    {
      localView = getChildAt(paramInt1);
      localC = (c)localView.getLayoutParams();
      paramInt3 = paramInt2;
      if (localView.getVisibility() != 8) {
        if (c)
        {
          paramInt3 = paramInt2;
        }
        else
        {
          paramInt2 += leftMargin;
          paramInt3 = localView.getMeasuredWidth();
          paramInt4 = localView.getMeasuredHeight();
          j = k - paramInt4 / 2;
          localView.layout(paramInt2, j, paramInt2 + paramInt3, paramInt4 + j);
          paramInt3 = paramInt2 + (paramInt3 + rightMargin + i);
        }
      }
      paramInt1 += 1;
      paramInt2 = paramInt3;
    }
  }
  
  protected void onMeasure(int paramInt1, int paramInt2)
  {
    boolean bool2 = w;
    boolean bool1;
    if (View.MeasureSpec.getMode(paramInt1) == 1073741824) {
      bool1 = true;
    } else {
      bool1 = false;
    }
    w = bool1;
    if (bool2 != w) {
      x = 0;
    }
    int i = View.MeasureSpec.getSize(paramInt1);
    Object localObject;
    if (w)
    {
      localObject = p;
      if ((localObject != null) && (i != x))
      {
        x = i;
        ((l)localObject).b(true);
      }
    }
    int j = getChildCount();
    if ((w) && (j > 0))
    {
      e(paramInt1, paramInt2);
      return;
    }
    i = 0;
    while (i < j)
    {
      localObject = (c)getChildAt(i).getLayoutParams();
      rightMargin = 0;
      leftMargin = 0;
      i += 1;
    }
    super.onMeasure(paramInt1, paramInt2);
  }
  
  public void setExpandedActionViewsExclusive(boolean paramBoolean)
  {
    t.b(paramBoolean);
  }
  
  public void setOnMenuItemClickListener(e paramE)
  {
    A = paramE;
  }
  
  public void setOverflowIcon(Drawable paramDrawable)
  {
    getMenu();
    t.a(paramDrawable);
  }
  
  public void setOverflowReserved(boolean paramBoolean)
  {
    s = paramBoolean;
  }
  
  public void setPopupTheme(int paramInt)
  {
    if (r != paramInt)
    {
      r = paramInt;
      if (paramInt == 0)
      {
        q = getContext();
        return;
      }
      q = new ContextThemeWrapper(getContext(), paramInt);
    }
  }
  
  public void setPresenter(g paramG)
  {
    t = paramG;
    t.a(this);
  }
  
  public static abstract interface a
  {
    public abstract boolean a();
    
    public abstract boolean b();
  }
  
  private static class b
    implements v.a
  {
    b() {}
    
    public void a(l paramL, boolean paramBoolean) {}
    
    public boolean a(l paramL)
    {
      return false;
    }
  }
  
  public static class c
    extends Q.a
  {
    @ViewDebug.ExportedProperty
    public boolean c;
    @ViewDebug.ExportedProperty
    public int d;
    @ViewDebug.ExportedProperty
    public int e;
    @ViewDebug.ExportedProperty
    public boolean f;
    @ViewDebug.ExportedProperty
    public boolean g;
    boolean h;
    
    public c(int paramInt1, int paramInt2)
    {
      super(paramInt2);
      c = false;
    }
    
    public c(Context paramContext, AttributeSet paramAttributeSet)
    {
      super(paramAttributeSet);
    }
    
    public c(c paramC)
    {
      super();
      c = c;
    }
    
    public c(ViewGroup.LayoutParams paramLayoutParams)
    {
      super();
    }
  }
  
  private class d
    implements l.a
  {
    d() {}
    
    public void a(l paramL)
    {
      l.a localA = v;
      if (localA != null) {
        localA.a(paramL);
      }
    }
    
    public boolean a(l paramL, MenuItem paramMenuItem)
    {
      paramL = A;
      return (paramL != null) && (paramL.onMenuItemClick(paramMenuItem));
    }
  }
  
  public static abstract interface e
  {
    public abstract boolean onMenuItemClick(MenuItem paramMenuItem);
  }
}
