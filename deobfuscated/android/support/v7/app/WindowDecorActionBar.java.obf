package android.support.v7.app;

import a.a.c.g.A;
import a.a.c.g.C;
import a.a.c.g.u;
import a.a.c.g.z;
import a.a.d.a.f;
import a.a.d.a.j;
import a.a.d.d.b;
import a.a.d.d.b.a;
import a.a.d.d.g;
import a.a.d.d.i;
import android.app.Activity;
import android.app.Dialog;
import android.content.Context;
import android.content.res.Resources;
import android.content.res.Resources.Theme;
import android.content.res.TypedArray;
import android.support.v7.view.menu.l;
import android.support.v7.view.menu.l.a;
import android.support.v7.widget.ActionBarContainer;
import android.support.v7.widget.ActionBarContextView;
import android.support.v7.widget.ActionBarOverlayLayout;
import android.support.v7.widget.ActionBarOverlayLayout.a;
import android.support.v7.widget.L;
import android.support.v7.widget.Toolbar;
import android.support.v7.widget.aa;
import android.util.TypedValue;
import android.view.ContextThemeWrapper;
import android.view.KeyCharacterMap;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MenuInflater;
import android.view.MenuItem;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.view.animation.AccelerateInterpolator;
import android.view.animation.DecelerateInterpolator;
import android.view.animation.Interpolator;
import android.widget.FrameLayout;
import android.widget.HorizontalScrollView;
import java.lang.ref.WeakReference;
import java.util.ArrayList;

public class G
  extends a
  implements ActionBarOverlayLayout.a
{
  private static final Interpolator a = new AccelerateInterpolator();
  private static final Interpolator b = new DecelerateInterpolator();
  private boolean A = true;
  i B;
  private boolean C;
  boolean D;
  final A E = new D(this);
  final A F = new E(this);
  final C G = new F(this);
  Context c;
  private Context d;
  private Activity e;
  private Dialog f;
  ActionBarOverlayLayout g;
  ActionBarContainer h;
  L i;
  ActionBarContextView j;
  View k;
  aa l;
  private ArrayList<Object> m = new ArrayList();
  private int n = -1;
  private boolean o;
  a p;
  b q;
  b.a r;
  private boolean s;
  private ArrayList<a.b> t = new ArrayList();
  private boolean u;
  private int v = 0;
  boolean w = true;
  boolean x;
  boolean y;
  private boolean z;
  
  public G(Activity paramActivity, boolean paramBoolean)
  {
    e = paramActivity;
    paramActivity = paramActivity.getWindow().getDecorView();
    b(paramActivity);
    if (!paramBoolean) {
      k = paramActivity.findViewById(16908290);
    }
  }
  
  public G(Dialog paramDialog)
  {
    f = paramDialog;
    b(paramDialog.getWindow().getDecorView());
  }
  
  private L a(View paramView)
  {
    if ((paramView instanceof L)) {
      return (L)paramView;
    }
    if ((paramView instanceof Toolbar)) {
      return ((Toolbar)paramView).getWrapper();
    }
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append("Can't make a decor toolbar out of ");
    if (paramView != null) {
      paramView = paramView.getClass().getSimpleName();
    } else {
      paramView = "null";
    }
    localStringBuilder.append(paramView);
    throw new IllegalStateException(localStringBuilder.toString());
  }
  
  static boolean a(boolean paramBoolean1, boolean paramBoolean2, boolean paramBoolean3)
  {
    if (paramBoolean3) {
      return true;
    }
    return (!paramBoolean1) && (!paramBoolean2);
  }
  
  private void b(View paramView)
  {
    g = ((ActionBarOverlayLayout)paramView.findViewById(f.decor_content_parent));
    ActionBarOverlayLayout localActionBarOverlayLayout = g;
    if (localActionBarOverlayLayout != null) {
      localActionBarOverlayLayout.setActionBarVisibilityCallback(this);
    }
    i = a(paramView.findViewById(f.action_bar));
    j = ((ActionBarContextView)paramView.findViewById(f.action_context_bar));
    h = ((ActionBarContainer)paramView.findViewById(f.action_bar_container));
    paramView = i;
    if ((paramView != null) && (j != null) && (h != null))
    {
      c = paramView.k();
      if ((i.l() & 0x4) != 0) {
        i1 = 1;
      } else {
        i1 = 0;
      }
      if (i1 != 0) {
        o = true;
      }
      paramView = a.a.d.d.a.a(c);
      boolean bool;
      if ((!paramView.a()) && (i1 == 0)) {
        bool = false;
      } else {
        bool = true;
      }
      j(bool);
      k(paramView.f());
      paramView = c.obtainStyledAttributes(null, j.ActionBar, a.a.d.a.a.actionBarStyle, 0);
      if (paramView.getBoolean(j.ActionBar_hideOnContentScroll, false)) {
        i(true);
      }
      int i1 = paramView.getDimensionPixelSize(j.ActionBar_elevation, 0);
      if (i1 != 0) {
        a(i1);
      }
      paramView.recycle();
      return;
    }
    paramView = new StringBuilder();
    paramView.append(G.class.getSimpleName());
    paramView.append(" can only be used ");
    paramView.append("with a compatible window decor layout");
    throw new IllegalStateException(paramView.toString());
  }
  
  private void j()
  {
    if (z)
    {
      z = false;
      ActionBarOverlayLayout localActionBarOverlayLayout = g;
      if (localActionBarOverlayLayout != null) {
        localActionBarOverlayLayout.setShowingForActionMode(false);
      }
      l(false);
    }
  }
  
  private void k(boolean paramBoolean)
  {
    u = paramBoolean;
    if (!u)
    {
      i.a(null);
      h.setTabContainer(l);
    }
    else
    {
      h.setTabContainer(null);
      i.a(l);
    }
    int i1 = i();
    boolean bool = true;
    if (i1 == 2) {
      i1 = 1;
    } else {
      i1 = 0;
    }
    Object localObject = l;
    if (localObject != null) {
      if (i1 != 0)
      {
        ((HorizontalScrollView)localObject).setVisibility(0);
        localObject = g;
        if (localObject != null) {
          u.k((View)localObject);
        }
      }
      else
      {
        ((HorizontalScrollView)localObject).setVisibility(8);
      }
    }
    localObject = i;
    if ((!u) && (i1 != 0)) {
      paramBoolean = true;
    } else {
      paramBoolean = false;
    }
    ((L)localObject).b(paramBoolean);
    localObject = g;
    if ((!u) && (i1 != 0)) {
      paramBoolean = bool;
    } else {
      paramBoolean = false;
    }
    ((ActionBarOverlayLayout)localObject).setHasNonEmbeddedTabs(paramBoolean);
  }
  
  private boolean k()
  {
    return u.i(h);
  }
  
  private void l()
  {
    if (!z)
    {
      z = true;
      ActionBarOverlayLayout localActionBarOverlayLayout = g;
      if (localActionBarOverlayLayout != null) {
        localActionBarOverlayLayout.setShowingForActionMode(true);
      }
      l(false);
    }
  }
  
  private void l(boolean paramBoolean)
  {
    if (a(x, y, z))
    {
      if (!A)
      {
        A = true;
        g(paramBoolean);
      }
    }
    else if (A)
    {
      A = false;
      f(paramBoolean);
    }
  }
  
  public b a(b.a paramA)
  {
    a localA = p;
    if (localA != null) {
      localA.a();
    }
    g.setHideOnContentScrollEnabled(false);
    j.c();
    paramA = new a(j.getContext(), paramA);
    if (paramA.k())
    {
      p = paramA;
      paramA.i();
      j.a(paramA);
      e(true);
      j.sendAccessibilityEvent(32);
      return paramA;
    }
    return null;
  }
  
  public void a()
  {
    if (y)
    {
      y = false;
      l(true);
    }
  }
  
  public void a(float paramFloat)
  {
    u.a(h, paramFloat);
  }
  
  public void a(int paramInt)
  {
    v = paramInt;
  }
  
  public void a(int paramInt1, int paramInt2)
  {
    int i1 = i.l();
    if ((paramInt2 & 0x4) != 0) {
      o = true;
    }
    i.a(paramInt1 & paramInt2 | (paramInt2 ^ 0xFFFFFFFF) & i1);
  }
  
  public void a(CharSequence paramCharSequence)
  {
    i.setWindowTitle(paramCharSequence);
  }
  
  public void a(boolean paramBoolean)
  {
    w = paramBoolean;
  }
  
  public boolean a(int paramInt, KeyEvent paramKeyEvent)
  {
    Object localObject = p;
    if (localObject == null) {
      return false;
    }
    localObject = ((a)localObject).c();
    if (localObject != null)
    {
      if (paramKeyEvent != null) {
        i1 = paramKeyEvent.getDeviceId();
      } else {
        i1 = -1;
      }
      int i1 = KeyCharacterMap.load(i1).getKeyboardType();
      boolean bool = true;
      if (i1 == 1) {
        bool = false;
      }
      ((Menu)localObject).setQwertyMode(bool);
      return ((Menu)localObject).performShortcut(paramInt, paramKeyEvent, 0);
    }
    return false;
  }
  
  public void b() {}
  
  public void b(boolean paramBoolean)
  {
    if (paramBoolean == s) {
      return;
    }
    s = paramBoolean;
    int i2 = t.size();
    int i1 = 0;
    while (i1 < i2)
    {
      ((a.b)t.get(i1)).onMenuVisibilityChanged(paramBoolean);
      i1 += 1;
    }
  }
  
  public void c()
  {
    if (!y)
    {
      y = true;
      l(true);
    }
  }
  
  public void c(boolean paramBoolean)
  {
    if (!o) {
      h(paramBoolean);
    }
  }
  
  public void d()
  {
    i localI = B;
    if (localI != null)
    {
      localI.a();
      B = null;
    }
  }
  
  public void d(boolean paramBoolean)
  {
    C = paramBoolean;
    if (!paramBoolean)
    {
      i localI = B;
      if (localI != null) {
        localI.a();
      }
    }
  }
  
  public void e(boolean paramBoolean)
  {
    if (paramBoolean) {
      l();
    } else {
      j();
    }
    if (k())
    {
      z localZ2;
      z localZ1;
      if (paramBoolean)
      {
        localZ2 = i.a(4, 100L);
        localZ1 = j.a(0, 200L);
      }
      else
      {
        localZ1 = i.a(0, 200L);
        localZ2 = j.a(8, 100L);
      }
      i localI = new i();
      localI.a(localZ2, localZ1);
      localI.c();
      return;
    }
    if (paramBoolean)
    {
      i.c(4);
      j.setVisibility(0);
      return;
    }
    i.c(0);
    j.setVisibility(8);
  }
  
  public boolean e()
  {
    L localL = i;
    if ((localL != null) && (localL.h()))
    {
      i.collapseActionView();
      return true;
    }
    return false;
  }
  
  public Context f()
  {
    if (d == null)
    {
      TypedValue localTypedValue = new TypedValue();
      c.getTheme().resolveAttribute(a.a.d.a.a.actionBarWidgetTheme, localTypedValue, true);
      int i1 = resourceId;
      if (i1 != 0) {
        d = new ContextThemeWrapper(c, i1);
      } else {
        d = c;
      }
    }
    return d;
  }
  
  public void f(boolean paramBoolean)
  {
    i localI = B;
    if (localI != null) {
      localI.a();
    }
    if ((v == 0) && ((C) || (paramBoolean)))
    {
      h.setAlpha(1.0F);
      h.setTransitioning(true);
      localI = new i();
      float f2 = -h.getHeight();
      float f1 = f2;
      if (paramBoolean)
      {
        localObject = new int[2];
        Object tmp82_80 = localObject;
        tmp82_80[0] = 0;
        Object tmp86_82 = tmp82_80;
        tmp86_82[1] = 0;
        tmp86_82;
        h.getLocationInWindow((int[])localObject);
        f1 = f2 - localObject[1];
      }
      Object localObject = u.a(h);
      ((z)localObject).b(f1);
      ((z)localObject).a(G);
      localI.a((z)localObject);
      if (w)
      {
        localObject = k;
        if (localObject != null)
        {
          localObject = u.a((View)localObject);
          ((z)localObject).b(f1);
          localI.a((z)localObject);
        }
      }
      localI.a(a);
      localI.a(250L);
      localI.a(E);
      B = localI;
      localI.c();
      return;
    }
    E.b(null);
  }
  
  public void g(boolean paramBoolean)
  {
    Object localObject1 = B;
    if (localObject1 != null) {
      ((i)localObject1).a();
    }
    h.setVisibility(0);
    if ((v == 0) && ((C) || (paramBoolean)))
    {
      h.setTranslationY(0.0F);
      float f2 = -h.getHeight();
      float f1 = f2;
      if (paramBoolean)
      {
        localObject1 = new int[2];
        Object tmp73_71 = localObject1;
        tmp73_71[0] = 0;
        Object tmp77_73 = tmp73_71;
        tmp77_73[1] = 0;
        tmp77_73;
        h.getLocationInWindow((int[])localObject1);
        f1 = f2 - localObject1[1];
      }
      h.setTranslationY(f1);
      localObject1 = new i();
      Object localObject2 = u.a(h);
      ((z)localObject2).b(0.0F);
      ((z)localObject2).a(G);
      ((i)localObject1).a((z)localObject2);
      if (w)
      {
        localObject2 = k;
        if (localObject2 != null)
        {
          ((View)localObject2).setTranslationY(f1);
          localObject2 = u.a(k);
          ((z)localObject2).b(0.0F);
          ((i)localObject1).a((z)localObject2);
        }
      }
      ((i)localObject1).a(b);
      ((i)localObject1).a(250L);
      ((i)localObject1).a(F);
      B = ((i)localObject1);
      ((i)localObject1).c();
    }
    else
    {
      h.setAlpha(1.0F);
      h.setTranslationY(0.0F);
      if (w)
      {
        localObject1 = k;
        if (localObject1 != null) {
          ((View)localObject1).setTranslationY(0.0F);
        }
      }
      F.b(null);
    }
    localObject1 = g;
    if (localObject1 != null) {
      u.k((View)localObject1);
    }
  }
  
  void h()
  {
    b.a localA = r;
    if (localA != null)
    {
      localA.a(q);
      q = null;
      r = null;
    }
  }
  
  public void h(boolean paramBoolean)
  {
    int i1;
    if (paramBoolean) {
      i1 = 4;
    } else {
      i1 = 0;
    }
    a(i1, 4);
  }
  
  public int i()
  {
    return i.i();
  }
  
  public void i(boolean paramBoolean)
  {
    if ((paramBoolean) && (!g.i())) {
      throw new IllegalStateException("Action bar must be in overlay mode (Window.FEATURE_OVERLAY_ACTION_BAR) to enable hide on content scroll");
    }
    D = paramBoolean;
    g.setHideOnContentScrollEnabled(paramBoolean);
  }
  
  public void j(boolean paramBoolean)
  {
    i.a(paramBoolean);
  }
  
  public class a
    extends b
    implements l.a
  {
    private final Context c;
    private final l d;
    private b.a e;
    private WeakReference<View> f;
    
    public a(Context paramContext, b.a paramA)
    {
      c = paramContext;
      e = paramA;
      this$1 = new l(paramContext);
      c(1);
      d = G.this;
      d.a(this);
    }
    
    public void a()
    {
      G localG = G.this;
      if (p != this) {
        return;
      }
      if (!G.a(x, y, false))
      {
        localG = G.this;
        q = this;
        r = e;
      }
      else
      {
        e.a(this);
      }
      e = null;
      e(false);
      j.a();
      i.j().sendAccessibilityEvent(32);
      localG = G.this;
      g.setHideOnContentScrollEnabled(D);
      p = null;
    }
    
    public void a(int paramInt)
    {
      a(c.getResources().getString(paramInt));
    }
    
    public void a(l paramL)
    {
      if (e == null) {
        return;
      }
      i();
      j.d();
    }
    
    public void a(View paramView)
    {
      j.setCustomView(paramView);
      f = new WeakReference(paramView);
    }
    
    public void a(CharSequence paramCharSequence)
    {
      j.setSubtitle(paramCharSequence);
    }
    
    public void a(boolean paramBoolean)
    {
      super.a(paramBoolean);
      j.setTitleOptional(paramBoolean);
    }
    
    public boolean a(l paramL, MenuItem paramMenuItem)
    {
      paramL = e;
      if (paramL != null) {
        return paramL.a(this, paramMenuItem);
      }
      return false;
    }
    
    public View b()
    {
      WeakReference localWeakReference = f;
      if (localWeakReference != null) {
        return (View)localWeakReference.get();
      }
      return null;
    }
    
    public void b(int paramInt)
    {
      b(c.getResources().getString(paramInt));
    }
    
    public void b(CharSequence paramCharSequence)
    {
      j.setTitle(paramCharSequence);
    }
    
    public Menu c()
    {
      return d;
    }
    
    public MenuInflater d()
    {
      return new g(c);
    }
    
    public CharSequence e()
    {
      return j.getSubtitle();
    }
    
    public CharSequence g()
    {
      return j.getTitle();
    }
    
    public void i()
    {
      if (p != this) {
        return;
      }
      d.s();
      try
      {
        e.b(this, d);
        return;
      }
      finally
      {
        d.r();
      }
    }
    
    public boolean j()
    {
      return j.b();
    }
    
    public boolean k()
    {
      d.s();
      try
      {
        boolean bool = e.a(this, d);
        return bool;
      }
      finally
      {
        d.r();
      }
    }
  }
}
