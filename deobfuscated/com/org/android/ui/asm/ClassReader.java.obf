package a.a.c.a.a;

import android.content.Context;
import android.content.res.Resources;
import android.content.res.Resources.NotFoundException;
import android.content.res.Resources.Theme;
import android.graphics.Typeface;
import android.graphics.drawable.Drawable;
import android.os.Build.VERSION;
import android.os.Handler;
import android.os.Looper;
import android.util.Log;
import android.util.TypedValue;
import java.io.IOException;
import org.xmlpull.v1.XmlPullParserException;

public final class h
{
  public static Typeface a(Context paramContext, int paramInt1, TypedValue paramTypedValue, int paramInt2, a paramA)
  {
    if (paramContext.isRestricted()) {
      return null;
    }
    return a(paramContext, paramInt1, paramTypedValue, paramInt2, paramA, null, true);
  }
  
  private static Typeface a(Context paramContext, int paramInt1, TypedValue paramTypedValue, int paramInt2, a paramA, Handler paramHandler, boolean paramBoolean)
  {
    Resources localResources = paramContext.getResources();
    localResources.getValue(paramInt1, paramTypedValue, true);
    paramContext = a(paramContext, localResources, paramTypedValue, paramInt1, paramInt2, paramA, paramHandler, paramBoolean);
    if (paramContext == null)
    {
      if (paramA != null) {
        return paramContext;
      }
      paramContext = new StringBuilder();
      paramContext.append("Font resource ID #0x");
      paramContext.append(Integer.toHexString(paramInt1));
      paramContext.append(" could not be retrieved.");
      throw new Resources.NotFoundException(paramContext.toString());
    }
    return paramContext;
  }
  
  private static Typeface a(Context paramContext, Resources paramResources, TypedValue paramTypedValue, int paramInt1, int paramInt2, a paramA, Handler paramHandler, boolean paramBoolean)
  {
    Object localObject = string;
    if (localObject != null)
    {
      localObject = ((CharSequence)localObject).toString();
      if (!((String)localObject).startsWith("res/"))
      {
        if (paramA != null) {
          paramA.a(-3, paramHandler);
        }
        return null;
      }
      paramTypedValue = a.a.c.b.c.a(paramResources, paramInt1, paramInt2);
      if (paramTypedValue != null)
      {
        if (paramA != null) {
          paramA.a(paramTypedValue, paramHandler);
        }
        return paramTypedValue;
      }
      try
      {
        if (((String)localObject).toLowerCase().endsWith(".xml"))
        {
          paramTypedValue = c.a(paramResources.getXml(paramInt1), paramResources);
          if (paramTypedValue == null)
          {
            Log.e("ResourcesCompat", "Failed to find font-family tag");
            if (paramA == null) {
              break label314;
            }
            paramA.a(-3, paramHandler);
            return null;
          }
          return a.a.c.b.c.a(paramContext, paramTypedValue, paramResources, paramInt1, paramInt2, paramA, paramHandler, paramBoolean);
        }
        paramContext = a.a.c.b.c.a(paramContext, paramResources, paramInt1, (String)localObject, paramInt2);
        if (paramA != null)
        {
          if (paramContext != null)
          {
            paramA.a(paramContext, paramHandler);
            return paramContext;
          }
          paramA.a(-3, paramHandler);
        }
        return paramContext;
      }
      catch (IOException paramContext)
      {
        paramResources = new StringBuilder();
        paramTypedValue = "Failed to read xml resource ";
      }
      catch (XmlPullParserException paramContext)
      {
        paramResources = new StringBuilder();
        paramTypedValue = "Failed to parse xml resource ";
      }
      paramResources.append(paramTypedValue);
      paramResources.append((String)localObject);
      Log.e("ResourcesCompat", paramResources.toString(), paramContext);
      if (paramA != null) {
        paramA.a(-3, paramHandler);
      }
      return null;
    }
    paramContext = new StringBuilder();
    paramContext.append("Resource \"");
    paramContext.append(paramResources.getResourceName(paramInt1));
    paramContext.append("\" (");
    paramContext.append(Integer.toHexString(paramInt1));
    paramContext.append(") is not a Font: ");
    paramContext.append(paramTypedValue);
    throw new Resources.NotFoundException(paramContext.toString());
    label314:
    return null;
  }
  
  public static Drawable a(Resources paramResources, int paramInt, Resources.Theme paramTheme)
  {
    if (Build.VERSION.SDK_INT >= 21) {
      return paramResources.getDrawable(paramInt, paramTheme);
    }
    return paramResources.getDrawable(paramInt);
  }
  
  public static abstract class a
  {
    public a() {}
    
    public abstract void a(int paramInt);
    
    public final void a(int paramInt, Handler paramHandler)
    {
      Handler localHandler = paramHandler;
      if (paramHandler == null) {
        localHandler = new Handler(Looper.getMainLooper());
      }
      localHandler.post(new g(this, paramInt));
    }
    
    public abstract void a(Typeface paramTypeface);
    
    public final void a(Typeface paramTypeface, Handler paramHandler)
    {
      Handler localHandler = paramHandler;
      if (paramHandler == null) {
        localHandler = new Handler(Looper.getMainLooper());
      }
      localHandler.post(new f(this, paramTypeface));
    }
  }
}
