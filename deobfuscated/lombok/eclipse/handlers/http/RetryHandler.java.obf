package b.c.a.a;

import android.os.SystemClock;
import c.a.a.a.A;
import c.a.a.a.b.c.l;
import c.a.a.a.b.k;
import c.a.a.a.n.e;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.HashSet;
import java.util.Iterator;
import javax.net.ssl.SSLException;

class t
  implements k
{
  private static final HashSet<Class<?>> a = new HashSet();
  private static final HashSet<Class<?>> b = new HashSet();
  private final int c;
  private final int d;
  
  static
  {
    a.add(A.class);
    a.add(UnknownHostException.class);
    a.add(SocketException.class);
    b.add(InterruptedIOException.class);
    b.add(SSLException.class);
  }
  
  public t(int paramInt1, int paramInt2)
  {
    c = paramInt1;
    d = paramInt2;
  }
  
  static void a(Class<?> paramClass)
  {
    a.add(paramClass);
  }
  
  public boolean a(IOException paramIOException, int paramInt, e paramE)
  {
    Boolean localBoolean = (Boolean)paramE.getAttribute("http.request_sent");
    boolean bool = true;
    if (((localBoolean == null) || (localBoolean.booleanValue())) || (paramInt > c)) {}
    while ((!a(a, paramIOException)) && (a(b, paramIOException)))
    {
      bool = false;
      break;
    }
    if ((bool) && ((l)paramE.getAttribute("http.request") == null)) {
      return false;
    }
    if (bool)
    {
      SystemClock.sleep(d);
      return bool;
    }
    paramIOException.printStackTrace();
    return bool;
  }
  
  protected boolean a(HashSet<Class<?>> paramHashSet, Throwable paramThrowable)
  {
    paramHashSet = paramHashSet.iterator();
    while (paramHashSet.hasNext()) {
      if (((Class)paramHashSet.next()).isInstance(paramThrowable)) {
        return true;
      }
    }
    return false;
  }
}
