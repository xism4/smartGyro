package c.a.a.a.h;

public class a
{
  public static byte[] a(byte[] paramArrayOfByte, int paramInt)
  {
    return a(paramArrayOfByte, 0, paramArrayOfByte.length, paramInt);
  }
  
  public static byte[] a(byte[] paramArrayOfByte, int paramInt1, int paramInt2, int paramInt3)
  {
    b localB = new b(paramInt3, null);
    int i = paramInt2 / 3 * 4;
    boolean bool = h;
    int j = 2;
    int k;
    if (bool)
    {
      paramInt3 = i;
      if (paramInt2 % 3 > 0) {
        paramInt3 = i + 4;
      }
    }
    else
    {
      k = paramInt2 % 3;
      paramInt3 = i;
      if (k != 0) {
        if (k != 1)
        {
          if (k != 2) {
            paramInt3 = i;
          } else {
            paramInt3 = i + 3;
          }
        }
        else {
          paramInt3 = i + 2;
        }
      }
    }
    i = paramInt3;
    if (i)
    {
      i = paramInt3;
      if (paramInt2 > 0)
      {
        k = (paramInt2 - 1) / 57;
        if (j) {
          i = j;
        } else {
          i = 1;
        }
        i = paramInt3 + (k + 1) * i;
      }
    }
    a = new byte[i];
    localB.a(paramArrayOfByte, paramInt1, paramInt2, true);
    return a;
  }
  
  static abstract class a
  {
    public byte[] a;
    public int b;
    
    a() {}
  }
  
  static class b
    extends a.a
  {
    private static final byte[] c = { 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 43, 47 };
    private static final byte[] d = { 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 45, 95 };
    private final byte[] e;
    int f;
    private int g;
    public final boolean h;
    public final boolean i;
    public final boolean j;
    private final byte[] k;
    
    public b(int paramInt, byte[] paramArrayOfByte)
    {
      a = paramArrayOfByte;
      boolean bool2 = true;
      boolean bool1;
      if ((paramInt & 0x1) == 0) {
        bool1 = true;
      } else {
        bool1 = false;
      }
      h = bool1;
      if ((paramInt & 0x2) == 0) {
        bool1 = true;
      } else {
        bool1 = false;
      }
      i = bool1;
      if ((paramInt & 0x4) != 0) {
        bool1 = bool2;
      } else {
        bool1 = false;
      }
      j = bool1;
      if ((paramInt & 0x8) == 0) {
        paramArrayOfByte = c;
      } else {
        paramArrayOfByte = d;
      }
      k = paramArrayOfByte;
      e = new byte[2];
      f = 0;
      if (i) {
        paramInt = 19;
      } else {
        paramInt = -1;
      }
      g = paramInt;
    }
    
    public boolean a(byte[] paramArrayOfByte, int paramInt1, int paramInt2, boolean paramBoolean)
    {
      byte[] arrayOfByte1 = k;
      byte[] arrayOfByte2 = a;
      int m = g;
      int i3 = paramInt2 + paramInt1;
      paramInt2 = f;
      int i2 = 0;
      int i1 = 0;
      int i4;
      if (paramInt2 != 0) {
        if (paramInt2 != 1)
        {
          if (paramInt2 == 2)
          {
            paramInt2 = paramInt1 + 1;
            if (paramInt2 <= i3)
            {
              byte[] arrayOfByte3 = e;
              n = arrayOfByte3[0];
              i4 = arrayOfByte3[1];
              paramInt1 = paramArrayOfByte[paramInt1];
              f = 0;
              paramInt1 = (i4 & 0xFF) << 8 | (n & 0xFF) << 16 | paramInt1 & 0xFF;
              break label191;
            }
          }
        }
        else if (paramInt1 + 2 <= i3)
        {
          n = e[0];
          i4 = paramInt1 + 1;
          paramInt1 = paramArrayOfByte[paramInt1];
          paramInt2 = i4 + 1;
          paramInt1 = (n & 0xFF) << 16 | (paramInt1 & 0xFF) << 8 | paramArrayOfByte[i4] & 0xFF;
          f = 0;
          break label191;
        }
      }
      int n = -1;
      paramInt2 = paramInt1;
      paramInt1 = n;
      label191:
      if (paramInt1 != -1)
      {
        arrayOfByte2[0] = arrayOfByte1[(paramInt1 >> 18 & 0x3F)];
        arrayOfByte2[1] = arrayOfByte1[(paramInt1 >> 12 & 0x3F)];
        arrayOfByte2[2] = arrayOfByte1[(paramInt1 >> 6 & 0x3F)];
        arrayOfByte2[3] = arrayOfByte1[(paramInt1 & 0x3F)];
        m -= 1;
        if (m == 0)
        {
          if (j)
          {
            paramInt1 = 5;
            arrayOfByte2[4] = 13;
          }
          else
          {
            paramInt1 = 4;
          }
          m = paramInt1 + 1;
          arrayOfByte2[paramInt1] = 10;
          paramInt1 = m;
          m = 19;
          n = paramInt2;
        }
        else
        {
          paramInt1 = 4;
          n = paramInt2;
        }
      }
      else
      {
        paramInt1 = 0;
      }
      for (n = paramInt2;; n = paramInt2)
      {
        paramInt2 = n + 3;
        if (paramInt2 > i3) {
          break label495;
        }
        i4 = paramArrayOfByte[n];
        n = (paramArrayOfByte[(n + 1)] & 0xFF) << 8 | (i4 & 0xFF) << 16 | paramArrayOfByte[(n + 2)] & 0xFF;
        arrayOfByte2[paramInt1] = arrayOfByte1[(n >> 18 & 0x3F)];
        arrayOfByte2[(paramInt1 + 1)] = arrayOfByte1[(n >> 12 & 0x3F)];
        arrayOfByte2[(paramInt1 + 2)] = arrayOfByte1[(n >> 6 & 0x3F)];
        arrayOfByte2[(paramInt1 + 3)] = arrayOfByte1[(n & 0x3F)];
        paramInt1 += 4;
        m -= 1;
        if (m == 0)
        {
          if (j)
          {
            m = paramInt1 + 1;
            arrayOfByte2[paramInt1] = 13;
            paramInt1 = m;
          }
          m = paramInt1 + 1;
          arrayOfByte2[paramInt1] = 10;
          paramInt1 = m;
          break;
        }
      }
      label495:
      if (paramBoolean)
      {
        paramInt2 = f;
        if (n - paramInt2 == i3 - 1)
        {
          if (paramInt2 > 0)
          {
            n = e[0];
            paramInt2 = 1;
          }
          else
          {
            n = paramArrayOfByte[n];
            paramInt2 = i1;
          }
          n = (n & 0xFF) << 4;
          f -= paramInt2;
          i1 = paramInt1 + 1;
          arrayOfByte2[paramInt1] = arrayOfByte1[(n >> 6 & 0x3F)];
          paramInt2 = i1 + 1;
          arrayOfByte2[i1] = arrayOfByte1[(n & 0x3F)];
          paramInt1 = paramInt2;
          if (h)
          {
            n = paramInt2 + 1;
            arrayOfByte2[paramInt2] = 61;
            paramInt1 = n + 1;
            arrayOfByte2[n] = 61;
          }
          paramInt2 = paramInt1;
          if (i)
          {
            if (j)
            {
              paramInt2 = paramInt1 + 1;
              arrayOfByte2[paramInt1] = 13;
              paramInt1 = paramInt2;
            }
            paramInt2 = paramInt1 + 1;
            arrayOfByte2[paramInt1] = 10;
          }
        }
        else if (n - paramInt2 == i3 - 2)
        {
          if (paramInt2 > 1)
          {
            i1 = e[0];
            paramInt2 = 1;
          }
          else
          {
            i1 = paramArrayOfByte[n];
            n += 1;
            paramInt2 = i2;
          }
          if (f > 0)
          {
            n = e[paramInt2];
            paramInt2 += 1;
          }
          else
          {
            n = paramArrayOfByte[n];
          }
          n = (i1 & 0xFF) << 10 | (n & 0xFF) << 2;
          f -= paramInt2;
          paramInt2 = paramInt1 + 1;
          arrayOfByte2[paramInt1] = arrayOfByte1[(n >> 12 & 0x3F)];
          i1 = paramInt2 + 1;
          arrayOfByte2[paramInt2] = arrayOfByte1[(n >> 6 & 0x3F)];
          paramInt1 = i1 + 1;
          arrayOfByte2[i1] = arrayOfByte1[(n & 0x3F)];
          if (h)
          {
            paramInt2 = paramInt1 + 1;
            arrayOfByte2[paramInt1] = 61;
            paramInt1 = paramInt2;
          }
          paramInt2 = paramInt1;
          if (i)
          {
            paramInt2 = paramInt1;
            if (j)
            {
              arrayOfByte2[paramInt1] = 13;
              paramInt2 = paramInt1 + 1;
            }
            arrayOfByte2[paramInt2] = 10;
            paramInt2 += 1;
          }
        }
        else
        {
          paramInt2 = paramInt1;
          if (i)
          {
            paramInt2 = paramInt1;
            if (paramInt1 > 0)
            {
              paramInt2 = paramInt1;
              if (m != 19)
              {
                if (j)
                {
                  paramInt2 = paramInt1 + 1;
                  arrayOfByte2[paramInt1] = 13;
                  paramInt1 = paramInt2;
                }
                arrayOfByte2[paramInt1] = 10;
                paramInt2 = paramInt1 + 1;
              }
            }
          }
        }
      }
      else if (n == i3 - 1)
      {
        arrayOfByte1 = e;
        paramInt2 = f;
        f = (paramInt2 + 1);
        arrayOfByte1[paramInt2] = paramArrayOfByte[n];
        paramInt2 = paramInt1;
      }
      else
      {
        paramInt2 = paramInt1;
        if (n == i3 - 2)
        {
          arrayOfByte1 = e;
          paramInt2 = f;
          f = (paramInt2 + 1);
          arrayOfByte1[paramInt2] = paramArrayOfByte[n];
          paramInt2 = f;
          f = (paramInt2 + 1);
          arrayOfByte1[paramInt2] = paramArrayOfByte[(n + 1)];
          paramInt2 = paramInt1;
        }
      }
      b = paramInt2;
      g = m;
      return true;
    }
  }
}
