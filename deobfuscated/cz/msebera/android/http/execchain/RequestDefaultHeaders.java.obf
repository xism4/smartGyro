package c.a.a.a.n;

import c.a.a.a.C;
import c.a.a.a.D;
import c.a.a.a.F;
import c.a.a.a.o;
import c.a.a.a.p;
import c.a.a.a.p.a;
import c.a.a.a.q;
import c.a.a.a.r;
import c.a.a.a.s;
import c.a.a.a.w;
import java.net.InetAddress;

public class n
  implements s
{
  public n() {}
  
  public void a(r paramR, e paramE)
  {
    a.a(paramR, "HTTP request");
    paramE = f.a(paramE);
    D localD = paramR.getRequestLine().getProtocolVersion();
    if ((paramR.getRequestLine().getMethod().equalsIgnoreCase("CONNECT")) && (localD.c(w.e))) {
      return;
    }
    if (!paramR.containsHeader("Host"))
    {
      o localO = paramE.c();
      Object localObject = localO;
      if (localO == null)
      {
        localObject = paramE.a();
        paramE = localO;
        if ((localObject instanceof p))
        {
          paramE = (p)localObject;
          localObject = paramE.getRemoteAddress();
          int i = paramE.getRemotePort();
          paramE = localO;
          if (localObject != null) {
            paramE = new o(((InetAddress)localObject).getHostName(), i);
          }
        }
        localObject = paramE;
        if (paramE == null)
        {
          if (localD.c(w.e)) {
            return;
          }
          throw new C("Target host missing");
        }
      }
      paramR.addHeader("Host", ((o)localObject).e());
    }
  }
}
