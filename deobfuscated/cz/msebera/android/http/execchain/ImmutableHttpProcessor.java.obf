package c.a.a.a.n;

import c.a.a.a.r;
import c.a.a.a.s;
import c.a.a.a.t;
import c.a.a.a.v;

public final class k
  implements g
{
  private final s[] a;
  private final v[] b;
  
  public k(s[] paramArrayOfS, v[] paramArrayOfV)
  {
    int i;
    if (paramArrayOfS != null)
    {
      i = paramArrayOfS.length;
      a = new s[i];
      System.arraycopy(paramArrayOfS, 0, a, 0, i);
    }
    else
    {
      a = new s[0];
    }
    if (paramArrayOfV != null)
    {
      i = paramArrayOfV.length;
      b = new v[i];
      System.arraycopy(paramArrayOfV, 0, b, 0, i);
      return;
    }
    b = new v[0];
  }
  
  public void a(r paramR, e paramE)
  {
    s[] arrayOfS = a;
    int j = arrayOfS.length;
    int i = 0;
    while (i < j)
    {
      arrayOfS[i].a(paramR, paramE);
      i += 1;
    }
  }
  
  public void a(t paramT, e paramE)
  {
    v[] arrayOfV = b;
    int j = arrayOfV.length;
    int i = 0;
    while (i < j)
    {
      arrayOfV[i].a(paramT, paramE);
      i += 1;
    }
  }
}
