package c.a.a.a.n;

import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;

public class a
  implements e
{
  private final e a;
  private final Map<String, Object> b = new ConcurrentHashMap();
  
  public a()
  {
    this(null);
  }
  
  public a(e paramE)
  {
    a = paramE;
  }
  
  public Object getAttribute(String paramString)
  {
    c.a.a.a.p.a.a(paramString, "Id");
    Object localObject2 = b.get(paramString);
    Object localObject1 = localObject2;
    if (localObject2 == null)
    {
      e localE = a;
      localObject1 = localObject2;
      if (localE != null) {
        localObject1 = localE.getAttribute(paramString);
      }
    }
    return localObject1;
  }
  
  public void setAttribute(String paramString, Object paramObject)
  {
    c.a.a.a.p.a.a(paramString, "Id");
    if (paramObject != null)
    {
      b.put(paramString, paramObject);
      return;
    }
    b.remove(paramString);
  }
  
  public String toString()
  {
    return b.toString();
  }
}
