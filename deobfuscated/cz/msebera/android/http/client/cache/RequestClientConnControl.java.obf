package c.a.a.a.b.e;

import c.a.a.a.F;
import c.a.a.a.b.c.l;
import c.a.a.a.b.h;
import c.a.a.a.f.c;
import c.a.a.a.f.k;
import c.a.a.a.o;
import c.a.a.a.q;
import c.a.a.a.r;
import c.a.a.a.s;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class b
  implements s
{
  public c.a.a.a.h.b a = new c.a.a.a.h.b(b.class);
  
  public b() {}
  
  public void a(r paramR, c.a.a.a.n.e paramE)
  {
    c.a.a.a.p.a.a(paramR, "HTTP request");
    c.a.a.a.p.a.a(paramE, "HTTP context");
    if (paramR.getRequestLine().getMethod().equalsIgnoreCase("CONNECT")) {
      return;
    }
    Object localObject4 = a.a(paramE);
    h localH = ((a)localObject4).j();
    if (localH == null)
    {
      a.a("Cookie store not specified in HTTP context");
      return;
    }
    Object localObject5 = ((a)localObject4).i();
    if (localObject5 == null)
    {
      a.a("CookieSpec registry not specified in HTTP context");
      return;
    }
    Object localObject7 = ((c.a.a.a.n.f)localObject4).c();
    if (localObject7 == null)
    {
      a.a("Target host not set in the context");
      return;
    }
    Object localObject6 = ((a)localObject4).l();
    if (localObject6 == null)
    {
      a.a("Connection route not set in the context");
      return;
    }
    Object localObject1 = ((a)localObject4).n().b();
    Object localObject3 = localObject1;
    if (localObject1 == null) {
      localObject3 = "default";
    }
    if (a.a())
    {
      localObject1 = a;
      localObject2 = new StringBuilder();
      ((StringBuilder)localObject2).append("CookieSpec selected: ");
      ((StringBuilder)localObject2).append((String)localObject3);
      ((c.a.a.a.h.b)localObject1).a(((StringBuilder)localObject2).toString());
    }
    boolean bool = paramR instanceof l;
    Object localObject2 = null;
    if (bool) {
      localObject1 = ((l)paramR).getURI();
    }
    try
    {
      localObject1 = new URI(paramR.getRequestLine().getUri());
    }
    catch (URISyntaxException localURISyntaxException)
    {
      int j;
      int i;
      for (;;) {}
    }
    localObject1 = null;
    if (localObject1 != null) {
      localObject2 = ((URI)localObject1).getPath();
    }
    localObject1 = ((o)localObject7).b();
    j = ((o)localObject7).c();
    i = j;
    if (j < 0) {
      i = ((c.a.a.a.e.b.e)localObject6).getTargetHost().c();
    }
    j = 0;
    if (i < 0) {
      i = 0;
    }
    if (c.a.a.a.p.i.c((CharSequence)localObject2)) {
      localObject2 = "/";
    }
    localObject1 = new c.a.a.a.f.f((String)localObject1, i, (String)localObject2, ((c.a.a.a.e.b.e)localObject6).isSecure());
    localObject2 = (k)((c.a.a.a.d.a)localObject5).lookup((String)localObject3);
    if (localObject2 == null)
    {
      if (a.a())
      {
        paramR = a;
        paramE = new StringBuilder();
        paramE.append("Unsupported cookie policy: ");
        paramE.append((String)localObject3);
        paramR.a(paramE.toString());
      }
      return;
    }
    localObject2 = ((k)localObject2).a((c.a.a.a.n.e)localObject4);
    localObject5 = localH.getCookies();
    localObject3 = new ArrayList();
    localObject4 = new Date();
    localObject5 = ((List)localObject5).iterator();
    i = j;
    while (((Iterator)localObject5).hasNext())
    {
      localObject6 = (c)((Iterator)localObject5).next();
      StringBuilder localStringBuilder;
      if (!((c)localObject6).isExpired((Date)localObject4))
      {
        if (((c.a.a.a.f.i)localObject2).b((c)localObject6, (c.a.a.a.f.f)localObject1))
        {
          if (a.a())
          {
            localObject7 = a;
            localStringBuilder = new StringBuilder();
            localStringBuilder.append("Cookie ");
            localStringBuilder.append(localObject6);
            localStringBuilder.append(" match ");
            localStringBuilder.append(localObject1);
            ((c.a.a.a.h.b)localObject7).a(localStringBuilder.toString());
          }
          ((List)localObject3).add(localObject6);
        }
      }
      else
      {
        if (a.a())
        {
          localObject7 = a;
          localStringBuilder = new StringBuilder();
          localStringBuilder.append("Cookie ");
          localStringBuilder.append(localObject6);
          localStringBuilder.append(" expired");
          ((c.a.a.a.h.b)localObject7).a(localStringBuilder.toString());
        }
        i = 1;
      }
    }
    if (i != 0) {
      localH.clearExpired((Date)localObject4);
    }
    if (!((List)localObject3).isEmpty())
    {
      localObject3 = ((c.a.a.a.f.i)localObject2).formatCookies((List)localObject3).iterator();
      while (((Iterator)localObject3).hasNext()) {
        paramR.a((c.a.a.a.e)((Iterator)localObject3).next());
      }
    }
    if (((c.a.a.a.f.i)localObject2).getVersion() > 0)
    {
      localObject3 = ((c.a.a.a.f.i)localObject2).getVersionHeader();
      if (localObject3 != null) {
        paramR.a((c.a.a.a.e)localObject3);
      }
    }
    paramE.setAttribute("http.cookie-spec", localObject2);
    paramE.setAttribute("http.cookie-origin", localObject1);
  }
}
