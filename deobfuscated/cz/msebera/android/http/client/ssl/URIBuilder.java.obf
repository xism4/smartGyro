package c.a.a.a.b.f;

import c.a.a.a.c;
import c.a.a.a.e.f.a;
import c.a.a.a.z;
import java.net.URI;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.List;

public class d
{
  private String a;
  private String b;
  private String c;
  private String d;
  private String e;
  private String f;
  private int g;
  private String h;
  private String i;
  private String j;
  private List<z> k;
  private String l;
  private Charset m;
  private String n;
  private String o;
  
  public d(URI paramURI)
  {
    a(paramURI);
  }
  
  private List<z> a(String paramString, Charset paramCharset)
  {
    if ((paramString != null) && (!paramString.isEmpty())) {
      return f.d(paramString, paramCharset);
    }
    return null;
  }
  
  private void a(URI paramURI)
  {
    a = paramURI.getScheme();
    b = paramURI.getRawSchemeSpecificPart();
    c = paramURI.getRawAuthority();
    f = paramURI.getHost();
    g = paramURI.getPort();
    e = paramURI.getRawUserInfo();
    d = paramURI.getUserInfo();
    i = paramURI.getRawPath();
    h = paramURI.getPath();
    j = paramURI.getRawQuery();
    String str = paramURI.getRawQuery();
    Charset localCharset = m;
    if (localCharset == null) {
      localCharset = c.a;
    }
    k = a(str, localCharset);
    o = paramURI.getRawFragment();
    n = paramURI.getFragment();
  }
  
  private String b(List<z> paramList)
  {
    Charset localCharset = m;
    if (localCharset == null) {
      localCharset = c.a;
    }
    return f.a(paramList, localCharset);
  }
  
  private String f(String paramString)
  {
    Charset localCharset = m;
    if (localCharset == null) {
      localCharset = c.a;
    }
    return f.a(paramString, localCharset);
  }
  
  private String g()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    String str = a;
    if (str != null)
    {
      localStringBuilder.append(str);
      localStringBuilder.append(':');
    }
    str = b;
    if (str != null) {}
    for (;;)
    {
      localStringBuilder.append(str);
      break;
      if (c != null)
      {
        localStringBuilder.append("//");
        localStringBuilder.append(c);
      }
      else if (f != null)
      {
        localStringBuilder.append("//");
        str = e;
        if (str != null) {}
        for (;;)
        {
          localStringBuilder.append(str);
          localStringBuilder.append("@");
          break;
          str = d;
          if (str == null) {
            break;
          }
          str = h(str);
        }
        if (a.b(f))
        {
          localStringBuilder.append("[");
          localStringBuilder.append(f);
          str = "]";
        }
        else
        {
          str = f;
        }
        localStringBuilder.append(str);
        if (g >= 0)
        {
          localStringBuilder.append(":");
          localStringBuilder.append(g);
        }
      }
      str = i;
      if (str != null) {}
      for (str = i(str);; str = f(i(str)))
      {
        localStringBuilder.append(str);
        break;
        str = h;
        if (str == null) {
          break;
        }
      }
      if (j != null)
      {
        localStringBuilder.append("?");
        str = j;
      }
      else if (k != null)
      {
        localStringBuilder.append("?");
        str = b(k);
      }
      else
      {
        if (l == null) {
          break;
        }
        localStringBuilder.append("?");
        str = g(l);
      }
    }
    if (o != null) {
      localStringBuilder.append("#");
    }
    for (str = o;; str = g(n))
    {
      localStringBuilder.append(str);
      break;
      if (n == null) {
        break;
      }
      localStringBuilder.append("#");
    }
    return localStringBuilder.toString();
  }
  
  private String g(String paramString)
  {
    Charset localCharset = m;
    if (localCharset == null) {
      localCharset = c.a;
    }
    return f.b(paramString, localCharset);
  }
  
  private String h(String paramString)
  {
    Charset localCharset = m;
    if (localCharset == null) {
      localCharset = c.a;
    }
    return f.c(paramString, localCharset);
  }
  
  private static String i(String paramString)
  {
    if (paramString == null) {
      return null;
    }
    int i1 = 0;
    while ((i1 < paramString.length()) && (paramString.charAt(i1) == '/')) {
      i1 += 1;
    }
    String str = paramString;
    if (i1 > 1) {
      str = paramString.substring(i1 - 1);
    }
    return str;
  }
  
  public d a(int paramInt)
  {
    int i1 = paramInt;
    if (paramInt < 0) {
      i1 = -1;
    }
    g = i1;
    b = null;
    c = null;
    return this;
  }
  
  public d a(String paramString)
  {
    n = paramString;
    o = null;
    return this;
  }
  
  public d a(Charset paramCharset)
  {
    m = paramCharset;
    return this;
  }
  
  public d a(List<z> paramList)
  {
    if (k == null) {
      k = new ArrayList();
    }
    k.addAll(paramList);
    j = null;
    b = null;
    l = null;
    return this;
  }
  
  public URI a()
  {
    return new URI(g());
  }
  
  public d b()
  {
    k = null;
    j = null;
    b = null;
    return this;
  }
  
  public d b(String paramString)
  {
    f = paramString;
    b = null;
    c = null;
    return this;
  }
  
  public d c(String paramString)
  {
    h = paramString;
    b = null;
    i = null;
    return this;
  }
  
  public String c()
  {
    return f;
  }
  
  public d d(String paramString)
  {
    a = paramString;
    return this;
  }
  
  public String d()
  {
    return h;
  }
  
  public d e(String paramString)
  {
    d = paramString;
    b = null;
    c = null;
    e = null;
    return this;
  }
  
  public List<z> e()
  {
    List localList = k;
    if (localList != null) {
      return new ArrayList(localList);
    }
    return new ArrayList();
  }
  
  public String f()
  {
    return d;
  }
  
  public String toString()
  {
    return g();
  }
}
