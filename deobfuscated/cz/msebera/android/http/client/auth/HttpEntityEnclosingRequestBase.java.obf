package c.a.a.a.b.c;

import c.a.a.a.e;
import c.a.a.a.l;
import c.a.a.a.m;

public abstract class g
  extends k
  implements m
{
  private l h;
  
  public g() {}
  
  public void a(l paramL)
  {
    h = paramL;
  }
  
  public Object clone()
  {
    g localG = (g)super.clone();
    l localL = h;
    if (localL != null) {
      h = ((l)c.a.a.a.b.f.a.a(localL));
    }
    return localG;
  }
  
  public boolean expectContinue()
  {
    e localE = getFirstHeader("Expect");
    return (localE != null) && ("100-continue".equalsIgnoreCase(localE.getValue()));
  }
  
  public l getEntity()
  {
    return h;
  }
}
