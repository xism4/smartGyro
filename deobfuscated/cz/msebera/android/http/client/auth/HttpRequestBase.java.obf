package c.a.a.a.b.c;

import c.a.a.a.D;
import c.a.a.a.F;
import c.a.a.a.k.n;
import c.a.a.a.l.i;
import java.net.URI;

public abstract class k
  extends d
  implements l, f
{
  private D e;
  private URI f;
  private c.a.a.a.b.a.a g;
  
  public k() {}
  
  public c.a.a.a.b.a.a a()
  {
    return g;
  }
  
  public void a(D paramD)
  {
    e = paramD;
  }
  
  public void a(c.a.a.a.b.a.a paramA)
  {
    g = paramA;
  }
  
  public void a(URI paramURI)
  {
    f = paramURI;
  }
  
  public abstract String getMethod();
  
  public D getProtocolVersion()
  {
    D localD = e;
    if (localD != null) {
      return localD;
    }
    return i.b(getParams());
  }
  
  public F getRequestLine()
  {
    String str = getMethod();
    D localD = getProtocolVersion();
    Object localObject1 = getURI();
    if (localObject1 != null) {
      localObject1 = ((URI)localObject1).toASCIIString();
    } else {
      localObject1 = null;
    }
    Object localObject2;
    if (localObject1 != null)
    {
      localObject2 = localObject1;
      if (!((String)localObject1).isEmpty()) {}
    }
    else
    {
      localObject2 = "/";
    }
    return new n(str, (String)localObject2, localD);
  }
  
  public URI getURI()
  {
    return f;
  }
  
  public String toString()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(getMethod());
    localStringBuilder.append(" ");
    localStringBuilder.append(getURI());
    localStringBuilder.append(" ");
    localStringBuilder.append(getProtocolVersion());
    return localStringBuilder.toString();
  }
}
