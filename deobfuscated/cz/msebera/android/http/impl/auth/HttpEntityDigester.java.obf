package c.a.a.a.i.a;

import java.io.IOException;
import java.io.OutputStream;
import java.security.MessageDigest;

class h
  extends OutputStream
{
  private final MessageDigest a;
  private boolean b;
  private byte[] c;
  
  h(MessageDigest paramMessageDigest)
  {
    a = paramMessageDigest;
    a.reset();
  }
  
  public byte[] a()
  {
    return c;
  }
  
  public void close()
  {
    if (b) {
      return;
    }
    b = true;
    c = a.digest();
    super.close();
  }
  
  public void write(int paramInt)
  {
    if (!b)
    {
      a.update((byte)paramInt);
      return;
    }
    throw new IOException("Stream has been already closed");
  }
  
  public void write(byte[] paramArrayOfByte, int paramInt1, int paramInt2)
  {
    if (!b)
    {
      a.update(paramArrayOfByte, paramInt1, paramInt2);
      return;
    }
    throw new IOException("Stream has been already closed");
  }
}
