package c.a.a.a.i;

import c.a.a.a.B;
import c.a.a.a.D;
import c.a.a.a.G;
import c.a.a.a.H;
import c.a.a.a.k.p;
import c.a.a.a.p.a;
import c.a.a.a.q;
import c.a.a.a.t;
import c.a.a.a.w;

public class b
  implements c.a.a.a.b
{
  public static final b a = new b();
  
  public b() {}
  
  private boolean a(t paramT)
  {
    int i = paramT.getStatusLine().getStatusCode();
    return (i >= 200) && (i != 204) && (i != 304) && (i != 205);
  }
  
  public boolean a(t paramT, c.a.a.a.n.e paramE)
  {
    a.a(paramT, "HTTP response");
    a.a(paramE, "HTTP context");
    D localD = paramT.getStatusLine().getProtocolVersion();
    paramE = paramT.getFirstHeader("Transfer-Encoding");
    if (paramE != null)
    {
      if (!"chunked".equalsIgnoreCase(paramE.getValue())) {
        return false;
      }
    }
    else if (a(paramT))
    {
      paramE = paramT.getHeaders("Content-Length");
      if (paramE.length == 1) {
        paramE = paramE[0];
      }
    }
    try
    {
      int i = Integer.parseInt(paramE.getValue());
      if (i < 0) {
        return false;
      }
      c.a.a.a.e[] arrayOfE = paramT.getHeaders("Connection");
      paramE = arrayOfE;
      if (arrayOfE.length == 0) {
        paramE = paramT.getHeaders("Proxy-Connection");
      }
      if (paramE.length != 0) {}
      boolean bool;
      return false;
    }
    catch (NumberFormatException paramT)
    {
      try
      {
        paramT = new p(new c.a.a.a.k.e(paramE, null));
        i = 0;
        while (paramT.hasNext())
        {
          paramE = paramT.nextToken();
          if ("Close".equalsIgnoreCase(paramE)) {
            return false;
          }
          bool = "Keep-Alive".equalsIgnoreCase(paramE);
          if (bool) {
            i = 1;
          }
        }
        if (i != 0) {
          return true;
        }
        return localD.c(w.e) ^ true;
      }
      catch (B paramT) {}
      paramT = paramT;
      return false;
    }
  }
}
