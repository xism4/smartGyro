package c.a.a.a.i.b;

import c.a.a.a.e;
import c.a.a.a.g.f;
import c.a.a.a.k.a;
import c.a.a.a.l;
import c.a.a.a.m;
import java.io.InputStream;
import java.io.OutputStream;

@Deprecated
public class r
  extends v
  implements m
{
  private l h;
  private boolean i;
  
  public r(m paramM)
  {
    super(paramM);
    a(paramM.getEntity());
  }
  
  public void a(l paramL)
  {
    if (paramL != null) {
      paramL = new a(paramL);
    } else {
      paramL = null;
    }
    h = paramL;
    i = false;
  }
  
  public boolean e()
  {
    l localL = h;
    return (localL == null) || (localL.isRepeatable()) || (!i);
  }
  
  public boolean expectContinue()
  {
    e localE = getFirstHeader("Expect");
    return (localE != null) && ("100-continue".equalsIgnoreCase(localE.getValue()));
  }
  
  public l getEntity()
  {
    return h;
  }
  
  class a
    extends f
  {
    a(l paramL)
    {
      super();
    }
    
    public void consumeContent()
    {
      r.a(r.this, true);
      super.consumeContent();
    }
    
    public InputStream getContent()
    {
      r.a(r.this, true);
      return super.getContent();
    }
    
    public void writeTo(OutputStream paramOutputStream)
    {
      r.a(r.this, true);
      super.writeTo(paramOutputStream);
    }
  }
}
