package c.a.a.a.i.d;

import c.a.a.a.f.b;
import c.a.a.a.f.c;
import c.a.a.a.f.n;
import c.a.a.a.f.o;
import c.a.a.a.p.a;
import java.util.Iterator;
import java.util.List;

public class r
  implements c.a.a.a.f.i
{
  private final G a;
  private final z b;
  private final w c;
  
  public r(String[] paramArrayOfString, boolean paramBoolean)
  {
    a = new G(paramBoolean, new b[] { new I(), new i(), new E(), new F(), new h(), new j(), new e(), new C(), new D() });
    b = new z(paramBoolean, new b[] { new B(), new i(), new y(), new h(), new j(), new e() });
    f localF = new f();
    i localI = new i();
    j localJ = new j();
    e localE = new e();
    if (paramArrayOfString != null) {
      paramArrayOfString = (String[])paramArrayOfString.clone();
    } else {
      paramArrayOfString = new String[] { "EEE, dd-MMM-yy HH:mm:ss z" };
    }
    c = new w(new b[] { localF, localI, localJ, localE, new g(paramArrayOfString) });
  }
  
  public List<c> a(c.a.a.a.e paramE, c.a.a.a.f.f paramF)
  {
    a.a(paramE, "Header");
    a.a(paramF, "Cookie origin");
    Object localObject = paramE.getElements();
    int m = localObject.length;
    int i = 0;
    int j = 0;
    int k = 0;
    while (i < m)
    {
      localV = localObject[i];
      if (localV.getParameterByName("version") != null) {
        k = 1;
      }
      if (localV.getParameterByName("expires") != null) {
        j = 1;
      }
      i += 1;
    }
    if ((j == 0) && (k != 0))
    {
      if ("Set-Cookie2".equals(paramE.getName())) {
        return a.a((c.a.a.a.f[])localObject, paramF);
      }
      return b.a((c.a.a.a.f[])localObject, paramF);
    }
    v localV = v.a;
    if ((paramE instanceof c.a.a.a.d))
    {
      localObject = (c.a.a.a.d)paramE;
      paramE = ((c.a.a.a.d)localObject).getBuffer();
      localObject = new c.a.a.a.k.w(((c.a.a.a.d)localObject).getValuePos(), paramE.length());
    }
    else
    {
      localObject = paramE.getValue();
      if (localObject == null) {
        break label254;
      }
      paramE = new c.a.a.a.p.d(((String)localObject).length());
      paramE.a((String)localObject);
      localObject = new c.a.a.a.k.w(0, paramE.length());
    }
    paramE = localV.a(paramE, (c.a.a.a.k.w)localObject);
    return c.a(new c.a.a.a.f[] { paramE }, paramF);
    label254:
    paramE = new n("Header value is null");
    for (;;)
    {
      throw paramE;
    }
  }
  
  public void a(c paramC, c.a.a.a.f.f paramF)
  {
    a.a(paramC, "Cookie");
    a.a(paramF, "Cookie origin");
    if (paramC.getVersion() > 0)
    {
      if ((paramC instanceof o))
      {
        a.a(paramC, paramF);
        return;
      }
      b.a(paramC, paramF);
      return;
    }
    c.a(paramC, paramF);
  }
  
  public boolean b(c paramC, c.a.a.a.f.f paramF)
  {
    a.a(paramC, "Cookie");
    a.a(paramF, "Cookie origin");
    if (paramC.getVersion() > 0)
    {
      if ((paramC instanceof o)) {
        return a.b(paramC, paramF);
      }
      return b.b(paramC, paramF);
    }
    return c.b(paramC, paramF);
  }
  
  public List<c.a.a.a.e> formatCookies(List<c> paramList)
  {
    a.a(paramList, "List of cookies");
    Iterator localIterator = paramList.iterator();
    int i = Integer.MAX_VALUE;
    int j = 1;
    while (localIterator.hasNext())
    {
      c localC = (c)localIterator.next();
      int k = j;
      if (!(localC instanceof o)) {
        k = 0;
      }
      j = k;
      if (localC.getVersion() < i)
      {
        i = localC.getVersion();
        j = k;
      }
    }
    if (i > 0)
    {
      if (j != 0) {
        return a.formatCookies(paramList);
      }
      return b.formatCookies(paramList);
    }
    return c.formatCookies(paramList);
  }
  
  public int getVersion()
  {
    return a.getVersion();
  }
  
  public c.a.a.a.e getVersionHeader()
  {
    return null;
  }
}
