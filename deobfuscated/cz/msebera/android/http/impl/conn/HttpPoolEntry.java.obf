package c.a.a.a.i.c;

import c.a.a.a.e.b.f;
import c.a.a.a.e.q;
import c.a.a.a.j;
import c.a.a.a.m.a;
import java.io.IOException;
import java.util.Date;
import java.util.concurrent.TimeUnit;

@Deprecated
class l
  extends a<c.a.a.a.e.b.b, q>
{
  public c.a.a.a.h.b i;
  private final f j;
  
  public l(c.a.a.a.h.b paramB, String paramString, c.a.a.a.e.b.b paramB1, q paramQ, long paramLong, TimeUnit paramTimeUnit)
  {
    super(paramString, paramB1, paramQ, paramLong, paramTimeUnit);
    i = paramB;
    j = new f(paramB1);
  }
  
  public boolean a(long paramLong)
  {
    boolean bool = super.a(paramLong);
    if ((bool) && (i.a()))
    {
      c.a.a.a.h.b localB = i;
      StringBuilder localStringBuilder = new StringBuilder();
      localStringBuilder.append("Connection ");
      localStringBuilder.append(this);
      localStringBuilder.append(" expired @ ");
      localStringBuilder.append(new Date(b()));
      localB.a(localStringBuilder.toString());
    }
    return bool;
  }
  
  public void d()
  {
    q localQ = (q)a();
    try
    {
      localQ.close();
      return;
    }
    catch (IOException localIOException)
    {
      i.a("I/O error closing connection", localIOException);
    }
  }
  
  c.a.a.a.e.b.b e()
  {
    return j.c();
  }
  
  c.a.a.a.e.b.b f()
  {
    return (c.a.a.a.e.b.b)c();
  }
  
  f g()
  {
    return j;
  }
  
  public boolean h()
  {
    return !((q)a()).isOpen();
  }
}
