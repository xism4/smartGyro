package c.a.a.a.i.c;

import c.a.a.a.e.a.g;
import c.a.a.a.e.b.d;
import c.a.a.a.e.c.i;
import c.a.a.a.n;
import c.a.a.a.o;
import c.a.a.a.p.a;
import c.a.a.a.q;
import c.a.a.a.r;

@Deprecated
public class j
  implements d
{
  protected final i a;
  
  public j(i paramI)
  {
    a.a(paramI, "Scheme registry");
    a = paramI;
  }
  
  public c.a.a.a.e.b.b a(o paramO, r paramR, c.a.a.a.n.e paramE)
  {
    a.a(paramR, "HTTP request");
    paramE = g.b(paramR.getParams());
    if (paramE != null) {
      return paramE;
    }
    c.a.a.a.p.b.a(paramO, "Target host");
    paramE = g.c(paramR.getParams());
    paramR = g.a(paramR.getParams());
    try
    {
      c.a.a.a.e.c.e localE = a.b(paramO.d());
      boolean bool = localE.d();
      if (paramR == null) {
        return new c.a.a.a.e.b.b(paramO, paramE, bool);
      }
      return new c.a.a.a.e.b.b(paramO, paramE, paramR, bool);
    }
    catch (IllegalStateException paramO)
    {
      throw new n(paramO.getMessage());
    }
  }
}
