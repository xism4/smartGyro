package c.a.a.a.k;

import c.a.a.a.D;
import c.a.a.a.F;
import c.a.a.a.G;
import c.a.a.a.e;
import c.a.a.a.p.a;

public class j
  implements u
{
  @Deprecated
  public static final j a = new j();
  public static final j b = new j();
  
  public j() {}
  
  protected int a(D paramD)
  {
    return paramD.c().length() + 4;
  }
  
  protected c.a.a.a.p.d a(c.a.a.a.p.d paramD)
  {
    if (paramD != null)
    {
      paramD.clear();
      return paramD;
    }
    return new c.a.a.a.p.d(64);
  }
  
  public c.a.a.a.p.d a(c.a.a.a.p.d paramD, D paramD1)
  {
    a.a(paramD1, "Protocol version");
    int i = a(paramD1);
    if (paramD == null) {
      paramD = new c.a.a.a.p.d(i);
    } else {
      paramD.a(i);
    }
    paramD.a(paramD1.c());
    paramD.append('/');
    paramD.a(Integer.toString(paramD1.a()));
    paramD.append('.');
    paramD.a(Integer.toString(paramD1.b()));
    return paramD;
  }
  
  public c.a.a.a.p.d a(c.a.a.a.p.d paramD, F paramF)
  {
    a.a(paramF, "Request line");
    paramD = a(paramD);
    b(paramD, paramF);
    return paramD;
  }
  
  public c.a.a.a.p.d a(c.a.a.a.p.d paramD, e paramE)
  {
    a.a(paramE, "Header");
    if ((paramE instanceof c.a.a.a.d)) {
      return ((c.a.a.a.d)paramE).getBuffer();
    }
    paramD = a(paramD);
    b(paramD, paramE);
    return paramD;
  }
  
  protected void a(c.a.a.a.p.d paramD, G paramG)
  {
    int j = a(paramG.getProtocolVersion()) + 1 + 3 + 1;
    String str = paramG.getReasonPhrase();
    int i = j;
    if (str != null) {
      i = j + str.length();
    }
    paramD.a(i);
    a(paramD, paramG.getProtocolVersion());
    paramD.append(' ');
    paramD.a(Integer.toString(paramG.getStatusCode()));
    paramD.append(' ');
    if (str != null) {
      paramD.a(str);
    }
  }
  
  public c.a.a.a.p.d b(c.a.a.a.p.d paramD, G paramG)
  {
    a.a(paramG, "Status line");
    paramD = a(paramD);
    a(paramD, paramG);
    return paramD;
  }
  
  protected void b(c.a.a.a.p.d paramD, F paramF)
  {
    String str1 = paramF.getMethod();
    String str2 = paramF.getUri();
    paramD.a(str1.length() + 1 + str2.length() + 1 + a(paramF.getProtocolVersion()));
    paramD.a(str1);
    paramD.append(' ');
    paramD.a(str2);
    paramD.append(' ');
    a(paramD, paramF.getProtocolVersion());
  }
  
  protected void b(c.a.a.a.p.d paramD, e paramE)
  {
    String str = paramE.getName();
    paramE = paramE.getValue();
    int j = str.length() + 2;
    int i = j;
    if (paramE != null) {
      i = j + paramE.length();
    }
    paramD.a(i);
    paramD.a(str);
    paramD.a(": ");
    if (paramE != null) {
      paramD.a(paramE);
    }
  }
}
