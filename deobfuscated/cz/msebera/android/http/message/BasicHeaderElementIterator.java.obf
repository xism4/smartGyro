package c.a.a.a.k;

import c.a.a.a.e;
import c.a.a.a.f;
import c.a.a.a.h;
import c.a.a.a.p.a;
import java.util.NoSuchElementException;

public class d
  implements c.a.a.a.g
{
  private final h a;
  private final t b;
  private f c = null;
  private c.a.a.a.p.d d = null;
  private w e = null;
  
  public d(h paramH)
  {
    this(paramH, g.b);
  }
  
  public d(h paramH, t paramT)
  {
    a.a(paramH, "Header iterator");
    a = ((h)paramH);
    a.a(paramT, "Parser");
    b = ((t)paramT);
  }
  
  private void a()
  {
    e = null;
    d = null;
    while (a.hasNext())
    {
      Object localObject = a.nextHeader();
      if ((localObject instanceof c.a.a.a.d))
      {
        localObject = (c.a.a.a.d)localObject;
        d = ((c.a.a.a.d)localObject).getBuffer();
        e = new w(0, d.length());
        e.a(((c.a.a.a.d)localObject).getValuePos());
        return;
      }
      localObject = ((e)localObject).getValue();
      if (localObject != null)
      {
        d = new c.a.a.a.p.d(((String)localObject).length());
        d.a((String)localObject);
        e = new w(0, d.length());
      }
    }
  }
  
  private void b()
  {
    for (;;)
    {
      if ((!a.hasNext()) && (e == null)) {
        return;
      }
      Object localObject = e;
      if ((localObject == null) || (((w)localObject).a())) {
        a();
      }
      if (e != null)
      {
        while (!e.a())
        {
          localObject = b.b(d, e);
          if ((((f)localObject).getName().length() != 0) || (((f)localObject).getValue() != null))
          {
            c = ((f)localObject);
            return;
          }
        }
        if (e.a())
        {
          e = null;
          d = null;
        }
      }
    }
  }
  
  public boolean hasNext()
  {
    if (c == null) {
      b();
    }
    return c != null;
  }
  
  public final Object next()
  {
    return nextElement();
  }
  
  public f nextElement()
  {
    if (c == null) {
      b();
    }
    f localF = c;
    if (localF != null)
    {
      c = null;
      return localF;
    }
    throw new NoSuchElementException("No more header elements available");
  }
  
  public void remove()
  {
    throw new UnsupportedOperationException("Remove not supported");
  }
}
