package c.a.a.a.k;

import c.a.a.a.e;
import c.a.a.a.h;
import c.a.a.a.l.g;
import c.a.a.a.q;
import java.util.Iterator;

public abstract class a
  implements q
{
  protected r a = new r();
  @Deprecated
  protected g b;
  
  protected a()
  {
    this(null);
  }
  
  @Deprecated
  protected a(g paramG)
  {
    b = paramG;
  }
  
  public void a(e paramE)
  {
    a.a(paramE);
  }
  
  @Deprecated
  public void a(g paramG)
  {
    c.a.a.a.p.a.a(paramG, "HTTP parameters");
    b = ((g)paramG);
  }
  
  public void a(e[] paramArrayOfE)
  {
    a.a(paramArrayOfE);
  }
  
  public void addHeader(String paramString1, String paramString2)
  {
    c.a.a.a.p.a.a(paramString1, "Header name");
    a.a(new b(paramString1, paramString2));
  }
  
  public void b(e paramE)
  {
    a.b(paramE);
  }
  
  public boolean containsHeader(String paramString)
  {
    return a.a(paramString);
  }
  
  public e[] getAllHeaders()
  {
    return a.b();
  }
  
  public e getFirstHeader(String paramString)
  {
    return a.b(paramString);
  }
  
  public e[] getHeaders(String paramString)
  {
    return a.c(paramString);
  }
  
  @Deprecated
  public g getParams()
  {
    if (b == null) {
      b = new c.a.a.a.l.b();
    }
    return b;
  }
  
  public h headerIterator()
  {
    return a.c();
  }
  
  public h headerIterator(String paramString)
  {
    return a.d(paramString);
  }
  
  public void removeHeaders(String paramString)
  {
    if (paramString == null) {
      return;
    }
    h localH = a.c();
    while (localH.hasNext()) {
      if (paramString.equalsIgnoreCase(localH.nextHeader().getName())) {
        localH.remove();
      }
    }
  }
  
  public void setHeader(String paramString1, String paramString2)
  {
    c.a.a.a.p.a.a(paramString1, "Header name");
    a.c(new b(paramString1, paramString2));
  }
}
