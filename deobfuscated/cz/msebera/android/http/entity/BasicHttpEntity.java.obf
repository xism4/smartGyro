package c.a.a.a.g;

import c.a.a.a.i.f.i;
import java.io.InputStream;
import java.io.OutputStream;

public class b
  extends a
{
  private InputStream d;
  private long e = -1L;
  
  public b() {}
  
  public void a(long paramLong)
  {
    e = paramLong;
  }
  
  public void a(InputStream paramInputStream)
  {
    d = paramInputStream;
  }
  
  public InputStream getContent()
  {
    boolean bool;
    if (d != null) {
      bool = true;
    } else {
      bool = false;
    }
    c.a.a.a.p.b.a(bool, "Content has not been provided");
    return d;
  }
  
  public long getContentLength()
  {
    return e;
  }
  
  public boolean isRepeatable()
  {
    return false;
  }
  
  public boolean isStreaming()
  {
    InputStream localInputStream = d;
    return (localInputStream != null) && (localInputStream != i.a);
  }
  
  public void writeTo(OutputStream paramOutputStream)
  {
    c.a.a.a.p.a.a(paramOutputStream, "Output stream");
    InputStream localInputStream = getContent();
    try
    {
      byte[] arrayOfByte = new byte['?'];
      for (;;)
      {
        int i = localInputStream.read(arrayOfByte);
        if (i == -1) {
          break;
        }
        paramOutputStream.write(arrayOfByte, 0, i);
      }
      localInputStream.close();
      return;
    }
    finally
    {
      localInputStream.close();
    }
    for (;;)
    {
      throw paramOutputStream;
    }
  }
}
