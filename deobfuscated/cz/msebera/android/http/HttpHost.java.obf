package c.a.a.a;

import c.a.a.a.p.a;
import c.a.a.a.p.h;
import java.io.Serializable;
import java.net.InetAddress;
import java.util.Locale;

public final class o
  implements Cloneable, Serializable
{
  protected final String a;
  protected final String b;
  protected final int c;
  protected final String d;
  protected final InetAddress e;
  
  public o(String paramString, int paramInt)
  {
    this(paramString, paramInt, null);
  }
  
  public o(String paramString1, int paramInt, String paramString2)
  {
    a.a(paramString1, "Host name");
    a = ((String)paramString1);
    b = paramString1.toLowerCase(Locale.ROOT);
    if (paramString2 != null) {
      paramString1 = paramString2.toLowerCase(Locale.ROOT);
    } else {
      paramString1 = "http";
    }
    d = paramString1;
    c = paramInt;
    e = null;
  }
  
  public o(InetAddress paramInetAddress, int paramInt, String paramString)
  {
    this((InetAddress)paramInetAddress, paramInetAddress.getHostName(), paramInt, paramString);
  }
  
  public o(InetAddress paramInetAddress, String paramString1, int paramInt, String paramString2)
  {
    a.a(paramInetAddress, "Inet address");
    e = ((InetAddress)paramInetAddress);
    a.a(paramString1, "Hostname");
    a = ((String)paramString1);
    b = a.toLowerCase(Locale.ROOT);
    if (paramString2 != null) {
      paramInetAddress = paramString2.toLowerCase(Locale.ROOT);
    } else {
      paramInetAddress = "http";
    }
    d = paramInetAddress;
    c = paramInt;
  }
  
  public InetAddress a()
  {
    return e;
  }
  
  public String b()
  {
    return a;
  }
  
  public int c()
  {
    return c;
  }
  
  public Object clone()
  {
    return super.clone();
  }
  
  public String d()
  {
    return d;
  }
  
  public String e()
  {
    if (c != -1)
    {
      StringBuilder localStringBuilder = new StringBuilder(a.length() + 6);
      localStringBuilder.append(a);
      localStringBuilder.append(":");
      localStringBuilder.append(Integer.toString(c));
      return localStringBuilder.toString();
    }
    return a;
  }
  
  public boolean equals(Object paramObject)
  {
    if (this == paramObject) {
      return true;
    }
    if ((paramObject instanceof o))
    {
      paramObject = (o)paramObject;
      if ((b.equals(b)) && (c == c) && (d.equals(d)))
      {
        InetAddress localInetAddress = e;
        if (localInetAddress == null)
        {
          if (e == null) {
            return true;
          }
        }
        else if (localInetAddress.equals(e)) {
          return true;
        }
      }
      return false;
    }
    return false;
  }
  
  public String f()
  {
    StringBuilder localStringBuilder = new StringBuilder();
    localStringBuilder.append(d);
    localStringBuilder.append("://");
    localStringBuilder.append(a);
    if (c != -1)
    {
      localStringBuilder.append(':');
      localStringBuilder.append(Integer.toString(c));
    }
    return localStringBuilder.toString();
  }
  
  public int hashCode()
  {
    int j = h.a(h.a(h.a(17, b), c), d);
    InetAddress localInetAddress = e;
    int i = j;
    if (localInetAddress != null) {
      i = h.a(j, localInetAddress);
    }
    return i;
  }
  
  public String toString()
  {
    return f();
  }
}
