package c.a.a.a.e.c;

import c.a.a.a.o;
import c.a.a.a.p.a;
import java.util.concurrent.ConcurrentHashMap;

@Deprecated
public final class i
{
  private final ConcurrentHashMap<String, e> a = new ConcurrentHashMap();
  
  public i() {}
  
  public final e a(e paramE)
  {
    a.a(paramE, "Scheme");
    return (e)a.put(paramE.b(), paramE);
  }
  
  public final e a(o paramO)
  {
    a.a(paramO, "Host");
    return b(paramO.d());
  }
  
  public final e a(String paramString)
  {
    a.a(paramString, "Scheme name");
    return (e)a.get(paramString);
  }
  
  public final e b(String paramString)
  {
    Object localObject = a(paramString);
    if (localObject != null) {
      return localObject;
    }
    localObject = new StringBuilder();
    ((StringBuilder)localObject).append("Scheme '");
    ((StringBuilder)localObject).append(paramString);
    ((StringBuilder)localObject).append("' not registered.");
    throw new IllegalStateException(((StringBuilder)localObject).toString());
  }
}
