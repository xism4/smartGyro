package c.a.a.a.p;

import c.a.a.a.l;
import java.io.InputStream;

public final class g
{
  public static void a(l paramL)
  {
    if (paramL == null) {
      return;
    }
    if (paramL.isStreaming())
    {
      paramL = paramL.getContent();
      if (paramL != null) {
        paramL.close();
      }
    }
  }
  
  public static byte[] b(l paramL)
  {
    a.a(paramL, "Entity");
    localInputStream = paramL.getContent();
    if (localInputStream == null) {
      return null;
    }
    try
    {
      if (paramL.getContentLength() > 2147483647L) {
        break label130;
      }
      bool = true;
    }
    finally
    {
      for (;;)
      {
        int j;
        int i;
        byte[] arrayOfByte;
        localInputStream.close();
        for (;;)
        {
          throw paramL;
        }
        boolean bool = false;
      }
    }
    a.a(bool, "HTTP entity too large to be buffered in memory");
    j = (int)paramL.getContentLength();
    i = j;
    if (j < 0) {
      i = 4096;
    }
    paramL = new c(i);
    arrayOfByte = new byte['?'];
    for (;;)
    {
      i = localInputStream.read(arrayOfByte);
      if (i == -1) {
        break;
      }
      paramL.a(arrayOfByte, 0, i);
    }
    paramL = paramL.g();
    localInputStream.close();
    return paramL;
  }
}
